test_config:
  conformance:
    tests:
      - name: "ESRP_002"
        variations:
          - name: "SIP_INVITE_location_PIDF-LO_Boundary1.xml"
            description: "Verify handling of location by value"
            interfaces:
              - name: "IF_BCF_ESRP"
                port_names: []
              - name: "IF_ECRF-LVF_ESRP"
                port_names: []
            params:
              messages:
                - action: "receive"
                  if_name: "IF_ECRF-LVF_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps: []
                  type: "HTTP"
                  method: "GET"
                  response_code: "200"
                  http_url: "/lost"  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {}
                  run_in_background: "True"
                - action: "send"
                  if_name: "IF_BCF_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps: []
                  type: "SIP"
                  method: "INVITE"
                  response_code: ""
                  http_url: ""  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {
                    scenario_file_path:
                      "file.test_suite/test_files/SIPp_scenarios/SIP_INVITE/SIP_INVITE_location_PIDF-LO_Boundary1.xml",
                    kwargs: {},
                    save_response_as: "ESRP_002_var1_response.log",
                    save_log_as: "ESRP_002_var1.log"
                  }
                  run_in_background: "False"
          - name: "SIP_INVITE_geolocation_HELD.xml"
            description: "Verify handling of location by HTTP HELD reference"
            interfaces:
              - name: "IF_BCF_ESRP"
                port_names: []
              - name: "IF_LIS_ESRP"
                port_names: [ ]
              - name: "IF_ECRF-LVF_ESRP"
                port_names: []
            params:
              messages:
                - action: "receive"
                  if_name: "IF_ECRF-LVF_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps: []
                  type: "HTTP"
                  method: "GET"
                  response_code: "200"
                  http_url: "/lost"  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {}
                  run_in_background: "True"
                - action: "receive"
                  if_name: "IF_LIS_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps: []
                  type: "HTTP"
                  method: "GET"
                  response_code: "200"
                  http_url: "/location"  # part after f.e. http://IP:PORT
                  body: "file.test_suite/test_files/HTTP_messages/HTTP_HELD/Location_response"
                  sipp_scenario: {}
                  run_in_background: "True"
                - action: "send"
                  if_name: "IF_BCF_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "lab_config['lab_config']['entities']"
                        "where_field": "name"
                        "where_value": "LIS"
                        "extract_field": "interfaces"
                      "save_result_as": "var.lis_interfaces"
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "var.lis_interfaces"
                        "where_field": "name"
                        "where_value": "IF_LIS_ESRP"
                        "extract_field": "ip"
                      "save_result_as": "var.lis_ip"
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "var.lis_interfaces"
                        "where_field": "name"
                        "where_value": "IF_LIS_ESRP"
                        "extract_field": "port_mapping"
                      "save_result_as": "var.lis_port_mapping"
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "var.lis_port_mapping"
                        "where_field": "protocol"
                        "where_value": "HTTP"
                        "extract_field": "port"
                      "save_result_as": "var.lis_http_port"
                    - method_name: "generate_str"
                      kwargs:
                        string_to_modify: "http://{0}:{1}/location"
                        variables: "list.[var.lis_ip, var.lis_http_port]"
                      save_result_as: "var.http_url"
                    - "method_name": "replace_string_in_file"
                      "kwargs":
                        "input_file": "file.test_suite/test_files/SIPp_scenarios/SIP_INVITE/SIP_INVITE_geolocation_HELD.xml"
                        "param_name": "LIS_LOCATION_REFERENCE_URL"
                        "value": "var.http_url"
                        "output_file": "file./tmp/ESRP_002/SIP_INVITE_geolocation_HELD.xml"
                  type: "SIP"
                  method: "INVITE"
                  response_code: ""
                  http_url: ""  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {
                    scenario_file_path: "file./tmp/ESRP_002/SIP_INVITE_geolocation_HELD.xml",
                    kwargs: {},
                    save_response_as: "ESRP_002_var2_response.log",
                    save_log_as: "ESRP_002_var2.log"
                  }
                  run_in_background: "False"
          - name: "SIP_INVITE_geolocation_SIP.xml"
            description: "Verify handling of location by SIP reference"
            interfaces:
              - name: "IF_BCF_ESRP"
                port_names: []
              - name: "IF_LIS_ESRP"
                port_names: [ ]
              - name: "IF_ECRF-LVF_ESRP"
                port_names: []
            params:
              messages:
                - action: "receive"
                  if_name: "IF_ECRF-LVF_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps: []
                  type: "HTTP"
                  method: "GET"
                  response_code: "200"
                  http_url: "/lost"  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {}
                  run_in_background: "True"
                - action: "receive"
                  if_name: "IF_LIS_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps: []
                  type: "SIP"
                  method: "SUBSCRIBE"
                  response_code: "200"
                  http_url: ""  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {
                    scenario_file_path: "file.test_suite/test_files/SIPp_scenarios/SIP_SUBSCRIBE/SIP_SUBSCRIBE_LIS.xml",
                    kwargs: {},
                    save_response_as: "ESRP_002_var3_LIS_response.log",
                    save_log_as: "ESRP_002_var3_LIS.log"
                  }
                  run_in_background: "True"
                - action: "send"
                  if_name: "IF_BCF_ESRP"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "lab_config['lab_config']['entities']"
                        "where_field": "name"
                        "where_value": "LIS"
                        "extract_field": "interfaces"
                      "save_result_as": "var.lis_interfaces"
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "var.lis_interfaces"
                        "where_field": "name"
                        "where_value": "IF_LIS_ESRP"
                        "extract_field": "ip"
                      "save_result_as": "var.lis_ip"
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "var.lis_interfaces"
                        "where_field": "name"
                        "where_value": "IF_LIS_ESRP"
                        "extract_field": "port_mapping"
                      "save_result_as": "var.lis_port_mapping"
                    - "method_name": "extract_from_config"
                      "kwargs":
                        "config_part": "var.lis_port_mapping"
                        "where_field": "protocol"
                        "where_value": "SIP"
                        "extract_field": "port"
                      "save_result_as": "var.lis_sip_port"
                    - method_name: "generate_str"
                      kwargs:
                        string_to_modify: "sip:location@{0}:{1}"
                        variables: "list.[var.lis_ip, var.lis_sip_port]"
                      save_result_as: "var.sip_uri"
                    - "method_name": "replace_string_in_file"
                      "kwargs":
                        "input_file": "file.test_suite/test_files/SIPp_scenarios/SIP_INVITE/SIP_INVITE_geolocation_SIP.xml"
                        "param_name": "LOCATION_SIP_URI"
                        "value": "var.sip_uri"
                        "output_file": "file./tmp/ESRP_002/SIP_INVITE_geolocation_SIP.xml"
                  type: "SIP"
                  method: "INVITE"
                  response_code: ""
                  http_url: ""  # part after f.e. http://IP:PORT
                  body: ""
                  sipp_scenario: {
                    scenario_file_path: "file./tmp/ESRP_002/SIP_INVITE_geolocation_SIP.xml",
                    kwargs: {},
                    save_response_as: "ESRP_002_var3_response.log",
                    save_log_as: "ESRP_002_var3.log"
                  }
                  run_in_background: "False"
        requirements:
          - name: "RQ_ESRP_017"
            variations: ["all"]
          - name: "RQ_ESRP_018"
            variations: ["all"]