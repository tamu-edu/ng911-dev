test_config:
  conformance:
    tests:
      - name: "PS_002"
        variations:
          - name: "PolicyObject_without_policyOwner"
            description: "Validate 4xx error response for request without 'policyOwner' parameter"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "remove_json_parameter"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyOwner"
                        output_file: "file./tmp/PS_002/PolicyObject_without_policyOwner.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_without_policyOwner.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_incorrect_policyOwner_send_fqdn_not_allowed_chars"
            description: "Validate 4xx error response for request with incorrect 'policyOwner' parameter \
                          (special characters not allowed in FQDN)"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps: [
                    {
                      method_name: "add_or_replace_json_parameter_value",
                      kwargs: {
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json",
                        param_name: "policyOwner",
                        value: "tester@ng911.te$t",
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_not_allowed_chars.json"
                      }
                    },
                    {
                      method_name: "generate_jws",
                      kwargs: {
                        json_source:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_not_allowed_chars.json",
                        cert_path: "var.lab_config['entities'][0]['certificate_file']",
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      },
                      save_result_as: "file./tmp/jws_body"
                    }
                  ]
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_incorrect_policyOwner_send_fqdn_missing_at"
            description: "Validate 4xx error response for request with incorrect 'policyOwner' parameter (missing '@')"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyOwner"
                        value: "testerng911.test"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_missing_at.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_missing_at.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_incorrect_policyOwner_send_fqdn_double_at"
            description: "Validate 4xx error response for request with incorrect 'policyOwner' parameter (double '@')"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyOwner"
                        value: "tester@@ng911.test"
                        output_file: "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_double_at.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_double_at.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_incorrect_policyOwner_send_fqdn_leading_period"
            description:
              "Validate 4xx error response for request with incorrect 'policyOwner' parameter (leading period)"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyOwner"
                        value: ".tester@ng911.test"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_leading_period.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_leading_period.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_incorrect_policyOwner_send_fqdn_long_string"
            description:
              "Validate 4xx error response for request with incorrect 'policyOwner' parameter (length exceeded)"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyOwner"
                        value: "tester@ng911.testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest\
                                testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttestt\
                                esttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttestt"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_long_string.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/PS_002/PolicyObject_with_incorrect_policyOwner_send_fqdn_long_string.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyType_missing"
            description: "Validate 4xx error response for request without 'policyType' parameter"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "remove_json_parameter"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyType_missing.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_policyType_missing.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyType_OtherRoutePolicyy"
            description: "Validate 4xx error response for request with incorrect 'policyType' parameter"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicyy"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyType_OtherRoutePolicyy.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_policyType_OtherRoutePolicyy.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyRules_missing"
            description: "Validate 4xx error response for request without 'policyRules' parameter"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "remove_json_parameter"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyRules"
                        output_file: "file./tmp/PS_002/PolicyObject_policyRules_missing.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyRules_missing.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyId_missing_for_policyType_OtherRoutePolicy"
            description: "Validate 4xx error response for request with \"policyType\": \"OtherRoutePolicy\" and without 'policyId' parameter"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicy"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_missing_for_policyType_OtherRoutePolicy.json"
                    - method_name: "remove_json_parameter"
                      kwargs:
                        json_input_file: "file./tmp/PS_002/PolicyObject_with_policyId_missing_for_policyType_OtherRoutePolicy.json"
                        param_name: "policyId"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_missing_for_policyType_OtherRoutePolicy_2.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_policyId_missing_for_policyType_OtherRoutePolicy_2.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyId_integer_for_policyType_OtherRoutePolicy"
            description: "Validate 4xx error response for request with \"policyType\": \"OtherRoutePolicy\" and with \
                          incorrect 'policyId' parameter (send integer)"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicy"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_integer_for_policyType_OtherRoutePolicy.json"
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file./tmp/PS_002/PolicyObject_with_policyId_integer_for_policyType_OtherRoutePolicy.json"
                        param_name: "policyId"
                        value: 123
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_integer_for_policyType_OtherRoutePolicy_2.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_policyId_integer_for_policyType_OtherRoutePolicy_2.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyId_newline_for_policyType_OtherRoutePolicy"
            description: "Validate 201 created response for request with \"policyType\": \"OtherRoutePolicy\" and with \
                          incorrect 'policyId' parameter: \"policyId\": \"\\n\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicy"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_policyId_newline_for_policyType_OtherRoutePolicy.json"
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file:
                          "file./tmp/PS_002/PolicyObject_with_policyId_newline_for_policyType_OtherRoutePolicy.json"
                        param_name: "policyId"
                        value: "\n"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_policyId_newline_for_policyType_OtherRoutePolicy_2.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/PS_002/PolicyObject_with_policyId_newline_for_policyType_OtherRoutePolicy_2.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyId_quote_for_policyType_OtherRoutePolicy"
            description: "Validate 201 created response for request with \"policyType\": \"OtherRoutePolicy\" and with incorrect 'policyId' parameter: \"policyId\": \"'\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicy"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_quote_for_policyType_OtherRoutePolicy.json"
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file./tmp/PS_002/PolicyObject_with_policyId_quote_for_policyType_OtherRoutePolicy.json"
                        param_name: "policyId"
                        value: "'"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_quote_for_policyType_OtherRoutePolicy_2.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_policyId_quote_for_policyType_OtherRoutePolicy_2.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyId_parenthesis_for_policyType_OtherRoutePolicy"
            description: "Validate 201 created response for request with \"policyType\": \"OtherRoutePolicy\" and with \
                          incorrect 'policyId' parameter: \"policyId\": \"(\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicy"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_policyId_parenthesis_for_policyType_OtherRoutePolicy.json"
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file:
                          "file./tmp/PS_002/PolicyObject_with_policyId_parenthesis_for_policyType_OtherRoutePolicy.json"
                        param_name: "policyId"
                        value: "("
                        output_file:
                          "file./tmp/PS_002/PolicyObject_with_policyId_parenthesis_for_policyType_OtherRoutePolicy.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/PS_002/PolicyObject_with_policyId_parenthesis_for_policyType_OtherRoutePolicy.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_with_policyId_test_123_for_policyType_OriginationRoutePolicy"
            description: "Validate 4xx error response for request with \"policyType\": \"OriginationRoutePolicy\" and \
                          with \"policyId\": \"test_123\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OriginationRoutePolicy"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_test_123_for_policyType_\
                                      OriginationRoutePolicy.json"
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file./tmp/PS_002/PolicyObject_with_policyId_test_123_for_policyType_\
                                          OriginationRoutePolicy.json"
                        param_name: "policyId"
                        value: "test_123"
                        output_file: "file./tmp/PS_002/PolicyObject_with_policyId_test_123_for_policyType_\
                                      OriginationRoutePolicy.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_with_policyId_test_123_for_policyType_\
                                      OriginationRoutePolicy.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_missing_policyQueueName_with_Origination_or_NormalNextHop"
            description: "Validate 4xx error response for request with \"policyType\": \"OriginationRoutePolicy\" or \"NormalNextHopRoutePolicy\" and without 'policyQueueName'"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OriginationRoutePolicy"
                        output_file: "file./tmp/PS_002/PolicyObject_missing_policyQueueName.json"
                    - method_name: "remove_json_parameter"
                      kwargs:
                        json_input_file: "file./tmp/PS_002/PolicyObject_missing_policyQueueName.json"
                        param_name: "policyQueueName"
                        output_file: "file./tmp/PS_002/PolicyObject_missing_policyQueueName.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_missing_policyQueueName.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyQueueName_test_with_policyType_OtherRoutePolicy"
            description: "Validate 4xx error response for request with \"policyType\": \"OtherRoutePolicy\" and with\
                          \"policyQueueName\": \"test\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyType"
                        value: "OtherRoutePolicy"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_policyQueueName_test_with_policyType_OtherRoutePolicy.json"
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file:
                          "file./tmp/PS_002/PolicyObject_policyQueueName_test_with_policyType_OtherRoutePolicy.json"
                        param_name: "policyQueueName"
                        value: "test"
                        output_file:
                          "file./tmp/PS_002/PolicyObject_policyQueueName_test_with_policyType_OtherRoutePolicy.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/PS_002/PolicyObject_policyQueueName_test_with_policyType_OtherRoutePolicy.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_year"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect year): \"policyExpirationTime\": \"21155-08-21T12:58:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "21155-08-21T12:58:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_year.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_year.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_month"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect month): \"timestamp\": \"2115-13-21T12:58:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-13-21T12:58:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_month.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_month.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_day"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect day): \"policyExpirationTime\": \"2115-12-32T12:58:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-12-32T12:58:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_day.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_day.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_hour"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect hour): \"policyExpirationTime\": \"2115-12-21T24:58:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-12-21T24:58:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_hour.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_hour.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_minute"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect minute): \"policyExpirationTime\": \"2115-12-21T12:60:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-12-21T12:60:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_minute.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_minute.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_second"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect second): \"policyExpirationTime\": \"2115-12-21T12:58:61.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-12-21T12:58:61.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_second.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_second.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_offset"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect time offset): \"policyExpirationTime\": \"2115-12-21T12:58:03.01-13:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-12-21T12:58:03.01-13:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_offset.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_offset.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_invalid_feb_day"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (incorrect day in February): \"policyExpirationTime\": \"2115-02-30T12:58:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2115-02-30T12:58:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_feb_day.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_invalid_feb_day.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_policyExpirationTime_past_date"
            description: "Validate 4xx error response for request with incorrect 'policyExpirationTime' parameter \
                          (date in the past): \"policyExpirationTime\": \"2015-04-30T12:58:03.01-05:00\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "policyExpirationTime"
                        value: "2015-04-30T12:58:03.01-05:00"
                        output_file: "file./tmp/PS_002/PolicyObject_policyExpirationTime_past_date.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_policyExpirationTime_past_date.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_description_invalid_integer"
            description: "Validate 4xx error response for request with incorrect 'description' parameter \
                          (send integer): \"description\": 123"
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "description"
                        value: 123
                        output_file: "file./tmp/PS_002/PolicyObject_description_invalid_integer.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_description_invalid_integer.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_description_with_newline"
            description: "Validate 201 created response for request with incorrect 'description' \
                          parameter: \"description\": \"\\n\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "description"
                        value: "\n"
                        output_file: "file./tmp/PS_002/PolicyObject_description_with_newline.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_description_with_newline.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_description_with_single_quote"
            description: "Validate 201 created response for request with incorrect 'description' \
                          parameter: \"description\": \"'\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "description"
                        value: "'"
                        output_file: "file./tmp/PS_002/PolicyObject_description_with_single_quote.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_description_with_single_quote.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "PolicyObject_description_with_parenthesis"
            description: "Validate 201 created response for request with incorrect 'description' \
                          parameter: \"description\": \"(\""
            interfaces:
              - name: "IF_ESRP_PS"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_PS"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "add_or_replace_json_parameter_value"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/Policy_object_example_v010.3f.3.0.1.json"
                        param_name: "description"
                        value: "("
                        output_file: "file./tmp/PS_002/PolicyObject_description_with_parenthesis.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/PS_002/PolicyObject_description_with_parenthesis.json"
                        cert_path: "var.lab_config['entities'][0]['certificate_file']"
                        key_path: "var.lab_config['entities'][0]['certificate_key']"
                      save_result_as: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/Policies"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
        requirements:
          - name: "RQ_PS_010"
            variations: [
              "PolicyObject_without_policyOwner",
              "PolicyObject_with_incorrect_policyOwner_send_fqdn_not_allowed_chars",
              "PolicyObject_with_incorrect_policyOwner_send_fqdn_missing_at",
              "PolicyObject_with_incorrect_policyOwner_send_fqdn_double_at",
              "PolicyObject_with_incorrect_policyOwner_send_fqdn_leading_period",
              "PolicyObject_with_incorrect_policyOwner_send_fqdn_long_string",
              "PolicyObject_with_policyType_missing",
              "PolicyObject_with_policyType_OtherRoutePolicyy",
              "PolicyObject_policyRules_missing",
              "PolicyObject_with_policyId_missing_for_policyType_OtherRoutePolicy",
              "PolicyObject_with_policyId_integer_for_policyType_OtherRoutePolicy",
              "PolicyObject_with_policyId_newline_for_policyType_OtherRoutePolicy",
              "PolicyObject_with_policyId_quote_for_policyType_OtherRoutePolicy",
              "PolicyObject_with_policyId_parenthesis_for_policyType_OtherRoutePolicy",
              "PolicyObject_with_policyId_test_123_for_policyType_OriginationRoutePolicy",
              "PolicyObject_missing_policyQueueName_with_Origination_or_NormalNextHop",
              "PolicyObject_policyQueueName_test_with_policyType_OtherRoutePolicy",
              "PolicyObject_policyExpirationTime_invalid_year",
              "PolicyObject_policyExpirationTime_invalid_month",
              "PolicyObject_policyExpirationTime_invalid_day",
              "PolicyObject_policyExpirationTime_invalid_hour",
              "PolicyObject_policyExpirationTime_invalid_minute",
              "PolicyObject_policyExpirationTime_invalid_second",
              "PolicyObject_policyExpirationTime_invalid_offset",
              "PolicyObject_policyExpirationTime_invalid_feb_day",
              "PolicyObject_description_invalid_integer",
              "PolicyObject_description_with_newline",
              "PolicyObject_description_with_single_quote",
              "PolicyObject_description_with_parenthesis"
            ]
          - name: "RQ_PS_025"
            variations: [ "PolicyObject_policyExpirationTime_past_date" ]