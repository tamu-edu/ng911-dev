test_config:
  conformance:
    tests:
      - name: "LOG_003"
        variations:
          - name: "LogEvent_with_incorrect_clientAssignedIdentifier_send_int"
            description: "Validate 4xx error response for request with incorrect 'clientAssignedIdentifier' \
                          parameter (send integer)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "clientAssignedIdentifier"
                        value: 123
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_clientAssignedIdentifier_send_int.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_clientAssignedIdentifier_send_int.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_clientAssignedIdentifier_send_newline"
            description: "Validate 201 created response for request with 'clientAssignedIdentifier': '\n'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "clientAssignedIdentifier"
                        value: "\n"
                        output_file: "file./tmp/LOG_003/LogEvent_with_clientAssignedIdentifier_send_newline.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_clientAssignedIdentifier_send_newline.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_clientAssignedIdentifier_send_single_quote"
            description: "Validate 201 created response for request with 'clientAssignedIdentifier': '''"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "clientAssignedIdentifier"
                        value: "'"
                        output_file: "file./tmp/LOG_003/LogEvent_with_clientAssignedIdentifier.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_clientAssignedIdentifier.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_clientAssignedIdentifier_send_open_parenthesis"
            description: "Validate 201 created response for request with 'clientAssignedIdentifier': '('"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "clientAssignedIdentifier"
                        value: "("
                        output_file: "file./tmp/LOG_003/LogEvent_with_clientAssignedIdentifier.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_clientAssignedIdentifier.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_logEventType_send_typo"
            description: "Validate 4xx error response for request with incorrect 'logEventType' parameter \
                        (send 'CallStateChangeLogEventt')"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "logEventType"
                        value: "CallStateChangeLogEventt"
                        output_file: "file./tmp/LOG_003/LogEvent.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_logEventType"
            description: "Validate 4xx error response for request without 'logEventType'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "logEventType"
                        output_file: "file./tmp/LOG_003/LogEvent_without_logEventType.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_logEventType.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_year"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter (incorrect year)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "20155-08-21T12:58:03.01-05:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_year.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_year.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_month"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter (incorrect month)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-13-21T12:58:03.01-05:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_month.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_month.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_day"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter (incorrect day)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-12-32T12:58:03.01-05:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_day.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_day.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_hour"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter (incorrect hour)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-12-21T24:58:03.01-05:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_hour.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_hour.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_minute"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter (incorrect minute)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-12-21T12:60:03.01-05:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_minute.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_minute.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_second"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter (incorrect minute)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-12-21T12:58:61.01-05:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_second.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_second.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_time_offset"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter \
                        (incorrect time offset)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-12-21T12:58:03.01-13:00"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_time_offset.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_time_offset.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_timestamp_send_invalid_day_in_February"
            description: "Validate 4xx error response for request with incorrect 'timestamp' parameter \
                        (incorrect day in February)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        value: "2015-02-30T12:58:03.01-05:00"
                        output_file:
                          "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_day_in_February.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source:
                          "file./tmp/LOG_003/LogEvent_with_incorrect_timestamp_send_invalid_day_in_February.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_timestamp"
            description: "Validate 4xx error response for request without 'timestamp'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "timestamp"
                        output_file: "file./tmp/LOG_003/LogEvent_without_timestamp.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_timestamp.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_elementId_special_characters"
            description: "Validate 4xx error response for request with incorrect 'elementId' parameter \
                        (special characters not allowed in FQDN)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "elementId"
                        value: "bcf#.ng911.te$t"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_special_characters.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_special_characters.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_elementId_consecutive_periods"
            description:
              "Validate 4xx error response for request with incorrect 'elementId' parameter (consecutive periods)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "elementId"
                        value: "bcf..ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_consecutive_periods.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_consecutive_periods.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_elementId_length_exceeded"
            description:
              "Validate 4xx error response for request with incorrect 'elementId' parameter (length exceeded)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "elementId"
                        value: "bcf.ng911.testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest\
                              testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest\
                              testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_length_exceeded.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_length_exceeded.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_elementId_leading_period"
            description: "Validate 4xx error response for request with incorrect 'elementId' parameter (leading period)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "elementId"
                        value: ".ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_leading_period.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_elementId_leading_period.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_elementId"
            description: "Validate 4xx error response for request without 'elementId'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "elementId"
                        output_file: "file./tmp/LOG_003/LogEvent_without_elementId.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_elementId.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyId_special_characters"
            description: "Validate 4xx error response for request with incorrect 'agencyId' parameter \
                        (special characters not allowed in FQDN)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyId"
                        value: "bcf#.ng911.te$t"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_special_characters.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_special_characters.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyId_consecutive_periods"
            description:
              "Validate 4xx error response for request with incorrect 'agencyId' parameter (consecutive periods)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyId"
                        value: "bcf..ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_consecutive_periods.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_consecutive_periods.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyId_length_exceeded"
            description: "Validate 4xx error response for request with incorrect 'agencyId' parameter (length exceeded)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyId"
                        value: "bcf.ng911.testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest\
                              testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest\
                              testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_length_exceeded.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_length_exceeded.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyId_leading_period"
            description: "Validate 4xx error response for request with incorrect 'agencyId' parameter (leading period)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyId"
                        value: ".ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_leading_period.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyId_leading_period.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_agencyId"
            description: "Validate 4xx error response for request without 'agencyId'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyId"
                        output_file: "file./tmp/LOG_003/LogEvent_without_agencyId.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_agencyId.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyAgentId_special_characters"
            description: "Validate 4xx error response for request with incorrect 'agencyAgentId' parameter \
                        (special characters not allowed in FQDN)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyAgentId"
                        value: "tester@ng911.te$t"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_special_characters.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_special_characters.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyAgentId_missing_at"
            description:
              "Validate 4xx error response for request with incorrect 'agencyAgentId' parameter (missing '@')"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyAgentId"
                        value: "testerng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_missing_at.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_missing_at.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyAgentId_double_at"
            description: "Validate 4xx error response for request with incorrect 'agencyAgentId' parameter (double '@')"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyAgentId"
                        value: "tester@@ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_double_at.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_double_at.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyAgentId_leading_period"
            description:
              "Validate 4xx error response for request with incorrect 'agencyAgentId' parameter (leading period)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyAgentId"
                        value: ".tester@ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_leading_period.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_leading_period.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyAgentId_length_exceeded"
            description:
              "Validate 4xx error response for request with incorrect 'agencyAgentId' parameter (length exceeded)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyAgentId"
                        value: "tester@ng911.testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest\
                                testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttestt\
                                esttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttestt"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_length_exceeded.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyAgentId_length_exceeded.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_agencyPositionId_send_int"
            description: "Validate 4xx error response for request with incorrect 'agencyPositionId' parameter \
                        (send integer)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyPositionId"
                        value: 123
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyPositionId_send_int.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_agencyPositionId_send_int.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_agencyPositionId_newline"
            description: "Validate 201 created response for request with 'agencyPositionId': '\\n'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyPositionId"
                        value: "\n"
                        output_file: "file./tmp/LOG_003/LogEvent_with_agencyPositionId_newline.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_agencyPositionId_newline.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_agencyPositionId_single_quote"
            description: "Validate 201 created response for request with 'agencyPositionId': \"'\""
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyPositionId"
                        value: "'"
                        output_file: "file./tmp/LOG_003/LogEvent_with_agencyPositionId_single_quote.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_agencyPositionId_single_quote.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_agencyPositionId_open_paren"
            description: "Validate 201 created response for request with 'agencyPositionId': '('"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "agencyPositionId"
                        value: "("
                        output_file: "file./tmp/LOG_003/LogEvent_with_agencyPositionId_open_paren.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_agencyPositionId_open_paren.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callId_wrong_urn"
            description: "Validate 4xx error response for request with incorrect 'callId' parameter (incorrect urn)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callId"
                        value: "urn:emergency:uid:callidd:123456789qwerty:bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_wrong_urn.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_wrong_urn.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callId_id_below_10_chars"
            description: "Validate 4xx error response for request with incorrect 'callId' parameter \
                        (string ID below 10 characters)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callId"
                        value: "urn:emergency:uid:callid:123456789:bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_id_below_10_chars.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_id_below_10_chars.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callId_id_exceeds_36_chars"
            description: "Validate 4xx error response for request with incorrect 'callId' parameter \
                        (string ID exceeded 36 characters)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callId"
                        value: "urn:emergency:uid:callid:123456789qwertyuiop1234567890qwertyui:bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_id_exceeds_36_chars.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_id_exceeds_36_chars.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callId_fqdn"
            description: "Validate 4xx error response for request with incorrect 'callId' parameter (incorrect FQDN)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callId"
                        value: "urn:emergency:uid:callid:123456789qwertyuiop:bcf.ng911..test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_fqdn.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_fqdn.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callId_double_colon"
            description: "Validate 4xx error response for request with incorrect 'callId' parameter (doubled ':')"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callId"
                        value: "urn:emergency:uid:callid:123456789qwertyuiop::bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_double_colon.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callId_double_colon.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_callId_for_CallStateChangeLogEvent"
            description: "Validate 4xx error response for request without 'callId' for \
                        'logEventType': 'CallStateChangeLogEvent'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "logEventType"
                        value: "CallStateChangeLogEvent"
                        output_file: "file./tmp/LOG_003/LogEvent_without_callId_for_CallStateChangeLogEvent.json"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file./tmp/LOG_003/LogEvent_without_callId_for_CallStateChangeLogEvent.json"
                        param_name: "callId"
                        output_file: "file./tmp/LOG_003/LogEvent_without_callId_for_CallStateChangeLogEvent.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_callId_for_CallStateChangeLogEvent.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_incidentId_wrong_urn"
            description: "Validate 4xx error response for request with incorrect 'incidentId' parameter (incorrect urn)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "incidentId"
                        value: "urn:emergency:uid:incidentidd:123456789qwerty:bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_wrong_urn.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_wrong_urn.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_incidentId_id_below_10_chars"
            description: "Validate 4xx error response for request with incorrect 'incidentId' parameter (string ID below 10 characters)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "incidentId"
                        value: "urn:emergency:uid:incidentid:123456789:bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_id_below_10_chars.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_id_below_10_chars.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_incidentId_id_exceeds_36_chars"
            description: "Validate 4xx error response for request with incorrect 'incidentId' parameter \
                        (string ID exceeded 36 characters)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "incidentId"
                        value: "urn:emergency:uid:incidentid:123456789qwertyuiop1234567890qwertyui:bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_id_exceeds_36_chars.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_id_exceeds_36_chars.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_incidentId_fqdn"
            description:
              "Validate 4xx error response for request with incorrect 'incidentId' parameter (incorrect FQDN)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "incidentId"
                        value: "urn:emergency:uid:callid:123456789qwertyuiop:bcf.ng911..test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_fqdn.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_fqdn.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_incidentId_double_colon"
            description: "Validate 4xx error response for request with incorrect 'incidentId' parameter (doubled ':')"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "incidentId"
                        value: "urn:emergency:uid:callid:123456789qwertyuiop::bcf.ng911.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_double_colon.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_incidentId_double_colon.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_incidentId_for_CallStateChangeLogEvent"
            description: "Validate 4xx error response for request without 'incidentId' for \
                        'logEventType': 'CallStateChangeLogEvent'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "incidentId"
                        output_file: "file./tmp/LOG_003/LogEvent_without_incidentId_for_CallStateChangeLogEvent.json"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file./tmp/LOG_003/LogEvent_without_incidentId_for_CallStateChangeLogEvent.json"
                        param_name: "logEventType"
                        value: "CallStateChangeLogEvent"
                        output_file: "file./tmp/LOG_003/LogEvent_without_incidentId_for_CallStateChangeLogEvent.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_incidentId_for_CallStateChangeLogEvent.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callIdSIP_not_allowed_characters"
            description: "Validate 4xx error response for request with incorrect 'callIdSIP' parameter \
                        (not allowed character)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callIdSIP"
                        value: "f81d4fae!-7dec-11d0-a765-00a0c91e6bf6@osp.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_not_allowed_characters.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_not_allowed_characters.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callIdSIP_empty"
            description: "Validate 4xx error response for request with incorrect 'callIdSIP' parameter (empty)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callIdSIP"
                        value: ""
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_empty.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_empty.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callIdSIP_length_exceeded"
            description:
              "Validate 4xx error response for request with incorrect 'callIdSIP' parameter (length exceeded)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callIdSIP"
                        value: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6f81d4fae-7dec-11d0-a765-00a0c91e6bf6f81d4fae-7dec-\
                                11d0-a765-00a0c91e6bf691e6b124789f@osp.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_length_exceeded.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_length_exceeded.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_callIdSIP_double_at"
            description: "Validate 4xx error response for request with incorrect 'callIdSIP' parameter (doubled '@')"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callIdSIP"
                        value: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6f81d4fae-7dec-11d0-a765-00a0c91e6bf6f81d4fae-7dec-\
                                11d0-a765-00a0c91e6bf691e6b124789f@osp.test"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_double_at.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_callIdSIP_double_at.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_without_callIdSIP_for_CallStateChangeLogEvent"
            description: "Validate 4xx error response for request without 'callIdSIP' for \
                        'logEventType': 'CallStateChangeLogEvent'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "remove_json_field_from_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "callIdSIP"
                        output_file: "file./tmp/LOG_003/LogEvent_without_callIdSIP_for_CallStateChangeLogEvent.json"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file./tmp/LOG_003/LogEvent_without_callIdSIP_for_CallStateChangeLogEvent.json"
                        param_name: "logEventType"
                        value: "CallStateChangeLogEvent"
                        output_file: "file./tmp/LOG_003/LogEvent_without_callIdSIP_for_CallStateChangeLogEvent.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_without_callIdSIP_for_CallStateChangeLogEvent.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_ipAddressPort_double_period"
            description:
              "Validate 4xx error response for request with incorrect 'ipAddressPort' parameter (double period)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "ipAddressPort"
                        value: "192.168.64..15:8080"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_ipAddressPort_double_period.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_ipAddressPort_double_period.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_ipAddressPort_port_number_exceeded"
            description: "Validate 4xx error response for request with incorrect 'ipAddressPort' parameter \
                        (port number exceeded)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "ipAddressPort"
                        value: "192.168.64.15:65536"
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_ipAddressPort_port_number_exceeded.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_ipAddressPort_port_number_exceeded.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_ipAddressPort_valid_SIP_INVITE"
            description: "Validate 4xx error response for request with 'ipAddressPort': '192.168.64.15:5061' \
                        (send message with SIP INVITE - check Test Preamble steps)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "ipAddressPort"
                        value: "192.168.64.15:5061"
                        output_file: "file./tmp/LOG_003/LogEvent_with_ipAddressPort_valid_SIP_INVITE.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_ipAddressPort_valid_SIP_INVITE.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_extension_invalid_json"
            description: "Validate 4xx error response for request with incorrect 'extension' parameter (invalid json)"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "modify_json_file"
                      kwargs:
                        json_input_file: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        param_name: "extension"
                        value: "{\"test\": \"test\""
                        output_file: "file./tmp/LOG_003/LogEvent_with_incorrect_extension_invalid_json.json"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file./tmp/LOG_003/LogEvent_with_incorrect_extension_invalid_json.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_jws_signed_by_non_traced_credentials"
            description: "Validate 4xx error response for request with JWS signed by credentials not traceable to PCA"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "generate_random_certificate"
                      kwargs:
                        output_certificate_file: "file./tmp/temp.crt"
                        output_key_file: "file./tmp/temp.key"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        cert_path: "file./tmp/temp.crt"
                        key_path: "file./tmp/temp.key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_incorrect_jws_agent_signature_mismatch"
            description: "Validate 4xx error response for request with JWS Agent signature different than \
                          'agencyAgentId' or 'elementId'"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']"
                        extract_field: "pca_certificate_file"
                      "save_result_as": "var.lab_config.pca_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']"
                        extract_field: "pca_certificate_key"
                      "save_result_as": "var.lab_config.pca_certificate_key"
                    - method_name: "generate_pca_signed_certificate"
                      kwargs:
                        pca_cert_file: "var.lab_config.pca_certificate_file"
                        pca_cert_key: "var.lab_config.pca_certificate_key"
                        output_cert_cn: "different.cn.for.testing"
                        output_cert_file: "file./tmp/agent.crt"
                        output_key_file: "file./tmp/agent.key"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        cert_path: "file./tmp/agent.crt"
                        key_path: "file./tmp/agent.key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "4xx"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"
          - name: "LogEvent_with_correct_jws_logEvent_object_json_body"
            description: "Validate JSON body from 201 Created response for request with correct JWS LogEvent object"
            interfaces:
              - name: "IF_ESRP_LOG"
                port_names: []
            params:
              messages:
                - action: "send"
                  if_name: "IF_ESRP_LOG"
                  if_port_name: ""  # Optional
                  prep_steps:
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_file"
                      "save_result_as": "var.esrp_certificate_file"
                    - method_name: "extract_from_config"
                      kwargs:
                        config_part: "lab_config['lab_config']['entities']"
                        where_field: "name"
                        where_value: "ESRP"
                        extract_field: "certificate_key"
                      "save_result_as": "var.esrp_certificate_key"
                    - method_name: "generate_jws"
                      kwargs:
                        json_source: "file.test_suite/test_files/JSON/log_event/LogEvent_object_example_v010.3f.3.0.3.json"
                        cert_path: "var.esrp_certificate_file"
                        key_path: "var.esrp_certificate_key"
                        output_file: "file./tmp/jws_body"
                  type: "HTTP"
                  method: "POST"
                  response_code: "201"
                  http_url: "/LogEvents"  # part after f.e. http://IP:PORT
                  body: "file./tmp/jws_body"
                  sipp_scenario: {}
                  run_in_background: "False"

        requirements:
          - name: "RQ_LOG_026"
            variations: [
              "LogEvent_with_incorrect_clientAssignedIdentifier_send_int",
              "LogEvent_with_clientAssignedIdentifier_send_newline",
              "LogEvent_with_clientAssignedIdentifier_send_single_quote",
              "LogEvent_with_clientAssignedIdentifier_send_open_parenthesis",
              "LogEvent_with_incorrect_logEventType_send_typo",
              "LogEvent_without_logEventType",
              "LogEvent_with_incorrect_timestamp_send_invalid_year",
              "LogEvent_with_incorrect_timestamp_send_invalid_month",
              "LogEvent_with_incorrect_timestamp_send_invalid_day",
              "LogEvent_with_incorrect_timestamp_send_invalid_hour",
              "LogEvent_with_incorrect_timestamp_send_invalid_minute",
              "LogEvent_with_incorrect_timestamp_send_invalid_second",
              "LogEvent_with_incorrect_timestamp_send_invalid_time_offset",
              "LogEvent_with_incorrect_timestamp_send_invalid_day_in_February",
              "LogEvent_without_timestamp",
              "LogEvent_with_incorrect_elementId_special_characters",
              "LogEvent_with_incorrect_elementId_consecutive_periods",
              "LogEvent_with_incorrect_elementId_length_exceeded",
              "LogEvent_with_incorrect_elementId_leading_period",
              "LogEvent_without_elementId",
              "LogEvent_with_incorrect_agencyId_special_characters",
              "LogEvent_with_incorrect_agencyId_consecutive_periods",
              "LogEvent_with_incorrect_agencyId_length_exceeded",
              "LogEvent_with_incorrect_agencyId_leading_period",
              "LogEvent_without_agencyId",
              "LogEvent_with_incorrect_agencyAgentId_special_characters",
              "LogEvent_with_incorrect_agencyAgentId_missing_at",
              "LogEvent_with_incorrect_agencyAgentId_double_at",
              "LogEvent_with_incorrect_agencyAgentId_leading_period",
              "LogEvent_with_incorrect_agencyAgentId_length_exceeded",
              "LogEvent_with_incorrect_agencyPositionId_send_int",
              "LogEvent_with_agencyPositionId_newline",
              "LogEvent_with_agencyPositionId_single_quote",
              "LogEvent_with_agencyPositionId_open_paren",
              "LogEvent_with_incorrect_callId_wrong_urn",
              "LogEvent_with_incorrect_callId_id_below_10_chars",
              "LogEvent_with_incorrect_callId_id_exceeds_36_chars",
              "LogEvent_with_incorrect_callId_fqdn",
              "LogEvent_with_incorrect_callId_double_colon",
              "LogEvent_without_callId_for_CallStateChangeLogEvent",
              "LogEvent_with_incorrect_incidentId_wrong_urn",
              "LogEvent_with_incorrect_incidentId_id_below_10_chars",
              "LogEvent_with_incorrect_incidentId_id_exceeds_36_chars",
              "LogEvent_with_incorrect_incidentId_fqdn",
              "LogEvent_with_incorrect_incidentId_double_colon",
              "LogEvent_without_incidentId_for_CallStateChangeLogEvent",
              "LogEvent_with_incorrect_callIdSIP_not_allowed_characters",
              "LogEvent_with_incorrect_callIdSIP_empty",
              "LogEvent_with_incorrect_callIdSIP_length_exceeded",
              "LogEvent_with_incorrect_callIdSIP_double_at",
              "LogEvent_without_callIdSIP_for_CallStateChangeLogEvent",
              "LogEvent_with_incorrect_ipAddressPort_double_period",
              "LogEvent_with_incorrect_ipAddressPort_port_number_exceeded",
              "LogEvent_with_ipAddressPort_valid_SIP_INVITE",
              "LogEvent_with_incorrect_extension_invalid_json",
              "LogEvent_with_incorrect_jws_signed_by_non_traced_credentials",
              "LogEvent_with_incorrect_jws_agent_signature_mismatch",
              "LogEvent_with_correct_jws_logEvent_object_json_body"
            ]
          - name: "RQ_LOG_036"
            variations: [
              "LogEvent_with_correct_jws_logEvent_object_json_body",
            ]