REQUIREMENTS_SCHEMA = {
    "RQ_CHE_001": {
        "requirement_text": "The PSAP MUST deploy the SIP call interface as defined in Section 3.1 including the multimedia capability, and the non-interactive call (emergency event) capability.",
        "document_section": "4.6.1",
        "description": "PSAPs must deploy a SIP call interface supporting multimedia and non-interactive emergency calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_002": {
        "requirement_text": "PSAPs MUST recognize calls to their administrative numbers received from the ESInet (and distinguishable from normal 9‑1‑1 calls by the presence of the number in a sip or tel URI in the To header field and the absence of the sos service URN in a Request-URI line, and identified in the target PSAP’s SALR, if available).",
        "document_section": "4.6.1",
        "description": "PSAPs must recognize calls to administrative numbers from the ESInet, distinguishable from regular 9-1-1 calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_003": {
        "requirement_text": "Callback and other non-emergency outbound call INVITE messages MUST comply with the SIP call interface as defined in Section 3.1, and constructed using the guidance provided in section 4.20 (OCIF), with the following clarifications.",
        "document_section": "4.6.1",
        "description": "Outbound call INVITEs must comply with the SIP call interface and OCIF guidance.",
        "test_id": "CHE_004",
        "subtests": []
    },
    "RQ_CHE_004": {
        "requirement_text": "The To header field value of the callback INVITE message MUST be set to a value that will allow reaching the home network of the target.",
        "document_section": "4.6.1",
        "description": "The callback INVITE's To header must be set to reach the target’s home network.",
        "test_id": "CHE_004",
        "subtests": []
    },
    "RQ_CHE_005": {
        "requirement_text": "If the To header field value is a sip URI, the domain SHALL be the one of the home network of the target.",
        "document_section": "4.6.1",
        "description": "For SIP URI callbacks, the domain must match the target's home network.",
        "test_id": "CHE_004",
        "subtests": []
    },
    "RQ_CHE_006": {
        "requirement_text": "All i3 PSAPs MUST support all media, voice, video, and text.",
        "document_section": "4.6.2",
        "description": "All i3 PSAPs must support voice, video, and text media.",
        "test_id": "CHE_002",
        "subtests": []
    },
    "RQ_CHE_007": {
        "requirement_text": "If the PSAP receives an Answer containing both RTT and MSRP, it MUST be prepared to deal with both simultaneously.",
        "document_section": "4.6.2",
        "description": "PSAPs must handle both RTT and MSRP simultaneously if both are included in an answer.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_008": {
        "requirement_text": "SDP offers and answers generated by the PSAP MUST include appropriate language tags.",
        "document_section": "4.6.2",
        "description": "SDP offers and answers must include appropriate language tags.",
        "test_id": "CHE_003",
        "subtests": []
    },
    "RQ_CHE_009": {
        "requirement_text": "Answers to offers that included language tags MUST include language tags.",
        "document_section": "4.6.2",
        "description": "Answers must include language tags if the offer included them.",
        "test_id": "CHE_003",
        "subtests": []
    },
    "RQ_CHE_010": {
        "requirement_text": "The PSAP MUST implement a LoST client interface as defined in Section 3.4.",
        "document_section": "4.6.3",
        "description": "PSAPs must implement a LoST client interface.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_011": {
        "requirement_text": "The PSAP MUST implement both SIP Presence Event Package and HELD dereferencing interfaces to any LIS function as described in Section 4.10.",
        "document_section": "4.6.4",
        "description": "PSAPs must support SIP Presence Event Package and HELD dereferencing interfaces.",
        "test_id": "CHE_001",
        "subtests": []
    },
    "RQ_CHE_012": {
        "requirement_text": "The PSAP MUST be able to be provisioned with credentials for every LIS in its service area.",
        "document_section": "4.6.4",
        "description": "PSAPs must be provisioned with credentials for every LIS in their service area.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_013": {
        "requirement_text": "The PSAP MUST use TCP with TLS for the LIS dereferencing interface, with fallback to TCP (without TLS) on failure to establish a TLS connection when TLS is used.",
        "document_section": "4.6.4",
        "description": "PSAPs must use TCP with TLS for LIS dereferencing, with TCP fallback if TLS fails.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_014": {
        "requirement_text": "PSAPs MUST be able to accept calls from, and utilize the features of, outside bridges.",
        "document_section": "4.6.5",
        "description": "PSAPs must accept calls from and use features of outside bridges.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_015": {
        "requirement_text": "The PSAP MUST deploy an ElementState Notifier.",
        "document_section": "4.6.6",
        "description": "PSAPs must deploy an ElementState Notifier.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_016": {
        "requirement_text": "Any element inside a PSAP that provides a call queue MUST deploy an ElementState notifier as described in Section 2.4.1.",
        "document_section": "4.6.6",
        "description": "PSAP call queue elements must deploy an ElementState Notifier.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_017": {
        "requirement_text": "The PSAP MUST deploy a ServiceState notifier as described in Section 2.4.2.",
        "document_section": "4.6.7",
        "description": "PSAPs must deploy a ServiceState notifier.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_018": {
        "requirement_text": "The PSAP MUST implement the subscriber side of the AbandonedCall Event as described in Section 4.2.2.9.",
        "document_section": "4.6.8",
        "description": "PSAPs must implement the subscriber side of the AbandonedCall Event.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_019": {
        "requirement_text": "The PSAP MUST implement a DequeueRegistration client, as described in Section 4.2.1.4, for every queue on which it expects to receive calls.",
        "document_section": "4.6.9",
        "description": "PSAPs must implement a DequeueRegistration client for every queue expecting calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_020": {
        "requirement_text": "The PSAP MUST implement a QueueState notifier as described in Section 4.2.1.3 for all queues it manages.",
        "document_section": "4.6.10",
        "description": "PSAPs must implement a QueueState notifier for all managed queues.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_021": {
        "requirement_text": "The PSAP MUST implement a Logging Service client, as defined in Section 4.12, including the client side of the media recording mechanism (Section 4.12.2).",
        "document_section": "4.6.12",
        "description": "PSAPs must implement a Logging Service client, including media recording.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_022": {
        "requirement_text": "A PSAP MUST be able to use a Logging Service hosted in the ESInet.",
        "document_section": "4.6.12",
        "description": "PSAPs must be able to use a Logging Service hosted in the ESInet.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_023": {
        "requirement_text": "The PSAP MAY deploy a Logging Service (as described in Section 4.12) inside the PSAP, in which case it MUST provide the Logging Service retrieval functions.",
        "document_section": "4.6.12",
        "description": "PSAPs may deploy an internal Logging Service, which must include retrieval functions.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_024": {
        "requirement_text": "The PSAP MUST provide a Security Posture notifier as described in Section 2.4.2.",
        "document_section": "4.6.13",
        "description": "PSAPs must provide a Security Posture notifier.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_025": {
        "requirement_text": "The PSAP MAY provide a Policy Store as described in Section 3.3.1, in which case it MUST implement the server-side of the policy retrieval functions, and MAY provide the server-side of the policy storage function.",
        "document_section": "4.6.14",
        "description": "PSAPs may provide a Policy Store, with server-side retrieval functions and optional storage functions.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_026": {
        "requirement_text": "The PSAP MAY provide a Policy Editor, in which case it MUST deploy the client-side of the policy retrieval and storage functions.",
        "document_section": "4.6.14",
        "description": "PSAPs may deploy a Policy Editor, with client-side policy retrieval and storage functions.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_027": {
        "requirement_text": "If the PSAP uses a Policy Store outside the PSAP to control functions inside the PSAP, it MUST deploy the client-side of the policy retrieval functions.",
        "document_section": "4.6.14",
        "description": "If using an external Policy Store, PSAPs must implement policy retrieval functions.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_028": {
        "requirement_text": "PSAPs MUST provide a RoutePolicy in the upstream PRF for the queue(s) to which its calls are sent.",
        "document_section": "4.6.14",
        "description": "PSAPs must provide a RoutePolicy for the queue(s) to which their calls are routed.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_029": {
        "requirement_text": "PSAPs MUST also provide an Enqueuer policy to specify which entities are allowed to send it calls.",
        "document_section": "4.6.14",
        "description": "PSAPs must provide an Enqueuer policy to specify which entities can send them calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_030": {
        "requirement_text": "The PSAP MUST deploy a dereference (HTTPS GET) interface for additional data as described in Section 7, as well as the IS ADR identity query mechanism.",
        "document_section": "4.6.15",
        "description": "PSAPs must deploy a dereference interface for additional data and IS ADR identity queries.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_031": {
        "requirement_text": "The PSAP MUST also be able to dereference an EIDO URI for a call transferred to it.",
        "document_section": "4.6.15",
        "description": "PSAPs must dereference an EIDO URI for transferred calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_032": {
        "requirement_text": "The PSAP MUST implement an NTP client interface for time of day information.",
        "document_section": "4.6.16",
        "description": "PSAPs must implement an NTP client interface for time information.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_033": {
        "requirement_text": "PSAPs MUST support the test call interface as described in Section 9...",
        "document_section": "4.6.17",
        "description": "PSAPs must support the test call interface.",
        "test_id": "CHE_005",
        "subtests": []
    },
    "RQ_CHE_034": {
        "requirement_text": "PSAPs MUST support test of all media – voice, video, and text.",
        "document_section": "4.6.17",
        "description": "PSAPs must support testing of all media (voice, video, and text).",
        "test_id": "CHE_005",
        "subtests": []
    },
    "RQ_CHE_035": {
        "requirement_text": "These test calls MUST originate from within the ESInet and MUST come from an entity with credentials traceable to the PCA and trusted by the ESRP.",
        "document_section": "4.6.18",
        "description": "Test calls must originate within the ESInet and come from an entity with traceable credentials.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_036": {
        "requirement_text": "The credentials used by the server MUST be traceable to the PCA and MUST occur in the ESRP policy.",
        "document_section": "4.6.18",
        "description": "Server credentials for test calls must be traceable to the PCA and ESRP policy.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_037": {
        "requirement_text": "The PSAP MUST merge the IncidentTrackingID assigned by the ESRP with the actual IncidentTrackingID.",
        "document_section": "4.6.19",
        "description": "PSAPs must merge IncidentTrackingIDs from the ESRP with the actual IncidentTrackingID.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_038": {
        "requirement_text": "Bridges MUST be multimedia capable (voice, video, text).",
        "document_section": "4.6.20",
        "description": "Bridges must support multimedia (voice, video, text).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_039": {
        "requirement_text": "If the calling device does not support the Replaces header field, then a B2BUA in the path MUST be present which does support the Replaces header field in an ESInet supporting ad hoc bridging.",
        "document_section": "4.7.1",
        "description": "A B2BUA must support the Replaces header if the calling device does not.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_040": {
        "requirement_text": "If the B2BUA receives an INVITE from a caller that does not include a Supported header field containing the “replaces” option-tag, it MUST include a Supported header field containing the “replaces” option-tag in the INVITE forwarded to the ESInet and provide the functionality described in this section.",
        "document_section": "4.7.1",
        "description": "B2BUA must include the “replaces” option-tag in the INVITE forwarded to the ESInet if missing.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_041": {
        "requirement_text": "All Bridges in the ESInet/NGCS MUST implement the Session Recording Client interface defined by SIPREC (RFC 7866) [116].",
        "document_section": "4.7.1",
        "description": "All ESInet/NGCS bridges must implement the SIPREC Session Recording Client interface.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_042": {
        "requirement_text": "When the bridge is used to transfer the call, the location of the caller and any Additional Data included (or retrieved in conjunction) with the call MUST be transferred to the transfer target.",
        "document_section": "4.7.1",
        "description": "When transferring a call, the bridge must transfer caller location and additional data to the target.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_043": {
        "requirement_text": "The emergency-Call Identifier and the emergency-Incident Tracking Identifier MUST be copied from the REFER to the outgoing INVITE.",
        "document_section": "4.7.1",
        "description": "Emergency-Call and Incident Tracking Identifiers must be copied from the REFER to the INVITE.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_044": {
        "requirement_text": "The REFER MUST contain a suitable URN, usually the urn used to query the ECRF to determine the correct responder, or an appropriate urn from the urn:emergency:service:responder tree if a specific responder was selected, a ‘serviceurn’ parameter of the Refer-To .",
        "document_section": "4.7.1",
        "description": "The REFER must contain a suitable URN to identify the responder or service.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_045": {
        "requirement_text": "The Refer-To header field contains the URI of the target (which may be returned from a LoST query) and MUST contain the URN (in the urn:service:sos or urn:emergency:service:sos trees) as a URI parameter of ‘serviceurn’.",
        "document_section": "4.7.1",
        "description": "The Refer-To header must include the service URN as a URI parameter.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_046": {
        "requirement_text": "When the INVITE is created by the bridge to the secondary PSAP, the INVITE MUST contain the service URN in the Request-URI, with a Route header field containing the URI (which should include the “lr” parameter to avoid Request-URI rewriting) found in the Refer-To header field, and MUST contain a Referred-By header field with the URI of the primary PSAP per RFC 3892.",
        "document_section": "4.7.1",
        "description": "INVITE to the secondary PSAP must include service URN and Referred-By header per RFC 3892.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_047": {
        "requirement_text": "Note that the Refer-To header field MUST be a sip URI.",
        "document_section": "4.7.1",
        "description": "The Refer-To header must use a sip URI.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_048": {
        "requirement_text": "The bridge is a service: each element of the bridge MUST implement the server-side of ElementState and the set of bridge elements MUST implement the server-side of ServiceState.",
        "document_section": "4.7.1",
        "description": "Each bridge element must implement the server-side of ElementState and ServiceState.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_049": {
        "requirement_text": "For the Ad Hoc case, the transfer-to PSAP MUST release the bridge when the transfer-from PSAP terminates its leg of the call in order to release bridge resources",
        "document_section": "4.7.1",
        "description": "The transfer-to PSAP must release the bridge when the transfer-from PSAP ends its call leg.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_050": {
        "requirement_text": "The caller, or some element in the path, MUST implement the Replaces header field (see Section 3.1.1.2).",
        "document_section": "4.7.1",
        "description": "The caller or an element in the path must implement the Replaces header field.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_051": {
        "requirement_text": "None",
        "document_section": "4.7.1.1",
        "description": "None",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_052": {
        "requirement_text": "None",
        "document_section": "4.7.1.2",
        "description": "None",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_053": {
        "requirement_text": "None",
        "document_section": "4.7.1.3",
        "description": "None",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_054": {
        "requirement_text": "For a blind transfer in ESInets using the ad hoc method, the transferring PSAP SHALL NOT seize the bridge prior to initiating a blind transfer.",
        "document_section": "4.7.2",
        "description": "The transferring PSAP must not seize the bridge before initiating a blind transfer.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_055": {
        "requirement_text": "The transfer-from PSAP MUST send a REFER where the Request Line contains the caller information.",
        "document_section": "4.7.2",
        "description": "The transfer-from PSAP must send a REFER with caller information in the Request Line.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_056": {
        "requirement_text": "The Refer-To header field MUST specify the transfer-to PSAP (or any other entity): for consistency with Bridging and Attended transfer, the transfer-from PSAP SHOULD include the EIDO URI in an escaped parameter in the Refer-To header field.",
        "document_section": "4.7.2",
        "description": "The Refer-To header must specify the transfer-to PSAP and may include the EIDO URI.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_057": {
        "requirement_text": "It MUST send a 200 OK indicating that the party was successfully added.",
        "document_section": "4.7.2",
        "description": "A 200 OK must be sent to confirm the party was successfully added.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_058": {
        "requirement_text": "At this point the transferring PSAP MUST send a BYE to end its participation in the call.",
        "document_section": "4.7.2",
        "description": "The transferring PSAP must send a BYE to end its participation after a successful transfer.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_059": {
        "requirement_text": "If the transferring PSAP receives an error code in the notification, e.g. 503 Service Unavailable, it MUST assume that the transfer did not occur, and MUST NOT terminate the call.",
        "document_section": "4.7.2",
        "description": "If an error code is received, the transferring PSAP must not terminate the call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_060": {
        "requirement_text": "If for any reason a consultative transfer must be terminated early, the following procedures MUST be used.",
        "document_section": "4.7.3",
        "description": "If a consultative transfer must be terminated early, specific procedures must be followed.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_061": {
        "requirement_text": "A REFER request implicitly establishes a subscription to the refer event as defined in RFC 3515 [19], but not regarding the conference as a whole. Once the REFER is successfully acknowledged with a 200 OK, the recipient of the REFER will send notifications of the status of the adding the target participant. It MAY send a notification containing a 100 Trying to indicate the transfer is pending. It MAY also send additional provisional messages, e.g. 183 Session Progress. It MUST send a 200 OK indicating that the party was successfully added. At this point the transferring PSAP MUST send a BYE to end its participation in the call. If the transferring PSAP receives an error code in the notification, e.g. 503 Service Unavailable, it MUST assume that the transfer did not occur and MUST not terminate the call.",
        "document_section": "4.7.3",
        "description": "The REFER request implicitly establishes a subscription to the refer event, followed by notifications of participant status.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_062": {
        "requirement_text": "Caller location information along with any Additional Data MUST be populated in an Emergency Incident Data Object (EIDO) structure (see Section 7 for further discussion of Additional Data structures).",
        "document_section": "4.7.4",
        "description": "Caller location and additional data must be included in an EIDO structure during transfers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_063": {
        "requirement_text": "The bridge MUST subsequently include this Call-Info header field in the INVITE it sends to the transfer target.",
        "document_section": "4.7.4",
        "description": "The bridge must include the Call-Info header in the INVITE to the transfer target.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_064": {
        "requirement_text": "The EIDO MUST be passed by reference when the Call-Info header field contains a URL that, when dereferenced, yields the EIDO.",
        "document_section": "4.7.4",
        "description": "The EIDO must be passed by reference through a URL in the Call-Info header.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_065": {
        "requirement_text": "The GET request MUST contain an ‘Accept:’ header field which specifies the MIME type assigned to EIDO (application/emergency.eido+json) and MUST include as a parameter a comma-delimited list of the major version(s) of the schema the client supports (for example ‘Accept: application/emergency.eido+json;version=\"1,2,3\"’).",
        "document_section": "4.7.4",
        "description": "The GET request for EIDO must specify an Accept header with the MIME type and version parameters.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_066": {
        "requirement_text": "If the server can fulfil the request, the response MUST include one and only one EIDO instance in the body of the reply.",
        "document_section": "4.7.4",
        "description": "The response to a valid GET request must include one EIDO instance.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_067": {
        "requirement_text": "The client MUST expect to receive an object derived from any minor version of the specified EIDO schema, including a higher minor version than it currently supports.",
        "document_section": "4.7.4",
        "description": "The client must handle any minor version of the specified EIDO schema, including higher versions.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_068": {
        "requirement_text": "The client MUST ignore any fields it does not understand.",
        "document_section": "4.7.4",
        "description": "The client must ignore unrecognized fields in the EIDO.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_069": {
        "requirement_text": "If the server does not support any of the major versions found in the ‘Accept:’ header field of the GET request, it MUST return a 406 Not Acceptable response.",
        "document_section": "4.7.4",
        "description": "A 406 Not Acceptable response is required if the server cannot fulfill the GET request.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_070": {
        "requirement_text": "PSAPs MUST implement both transfer models.",
        "document_section": "4.7.5",
        "description": "PSAPs must implement both transfer models.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_071": {
        "requirement_text": "Because some user devices do not currently support CPIM, the NG9 1 1 conference bridge MUST emulate what a CPIM-enabled device would do to appropriately interwork (e.g., label) text from other participants.",
        "document_section": "4.7.6",
        "description": "NG9-1-1 conference bridges must emulate CPIM functionality to properly interwork with non-CPIM devices, including text labeling from other participants.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_072": {
        "requirement_text": "All ESInet/NGCS CPIM-enabled endpoints MUST implement the nickname negotiation feature of RFC 7701 [123] and offer a nickname.",
        "document_section": "4.7.6",
        "description": "All ESInet/NGCS CPIM-enabled endpoints must implement the nickname negotiation feature from RFC 7701 and offer a nickname.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_073": {
        "requirement_text": "All endpoints and media intermediaries within an ESInet/NGCS MUST support CPIM.",
        "document_section": "4.7.6",
        "description": "All endpoints and media intermediaries within ESInet/NGCS must support CPIM.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_074": {
        "requirement_text": "The RTCP SDES report SHOULD contain identification of the source represented by the CSRC identifier. This identification MUST contain the CNAME field and MAY contain the NAME field and other defined fields of the SDES report.",
        "document_section": "4.8",
        "description": "The RTCP SDES report should identify the source using the CSRC identifier, with the CNAME field required and NAME field optional.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_075": {
        "requirement_text": "All NG9 1 1 implementations MUST supply identity information in this manner to the bridge.",
        "document_section": "4.8",
        "description": "All NG9-1-1 implementations must provide identity information to the bridge in this manner.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_076": {
        "requirement_text": "The bridge MUST convey SDES information received from the sources of the session members.",
        "document_section": "4.8",
        "description": "The bridge must convey SDES information received from session members' sources.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_077": {
        "requirement_text": "When such information is not available, the focus UA MUST compose CSRC, CNAME, and NAME information from available information from the SIP session (From and P A I) with the participant.",
        "document_section": "4.8",
        "description": "If SDES information is unavailable, the focus UA must compose CSRC, CNAME, and NAME using SIP session data (From and P-A-I).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_078": {
        "requirement_text": "The Mixer function of the Bridge MUST implement these mechanisms for both multi-party aware and multi-party unaware end devices.",
        "document_section": "4.8.1",
        "description": "The Bridge’s Mixer function must implement mechanisms for both multi-party aware and unaware devices.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_079": {
        "requirement_text": "Negotiation of multi-party awareness SHALL be performed by mixers and endpoints at session initiation and modification.",
        "document_section": "4.8.1",
        "description": "Negotiation of multi-party awareness must be performed by mixers and endpoints during session initiation and modification.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_080": {
        "requirement_text": "If both parties declare multi-party capability awareness, the mixer SHALL apply the mixing procedures for multi-party awareness as defined in RFC 9071 [219].",
        "document_section": "4.8.1",
        "description": "If both parties declare multi-party capability awareness, the mixer must follow multi-party awareness mixing procedures as per RFC 9071.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_081": {
        "requirement_text": "In all other cases, the mixer SHALL apply the limited functionality mixing procedures for multi-party unaware participants as defined in RFC 9071 [219].",
        "document_section": "4.8.1",
        "description": "For multi-party unaware participants, the mixer must apply limited functionality mixing procedures defined in RFC 9071.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_082": {
        "requirement_text": "The receiving endpoint with presentation functions, which has completed the negotiation for multi-party RTT awareness, SHALL use the source information to present text from the different sources separated in readable groups placed in an approximate relative time order.",
        "document_section": "4.8.1",
        "description": "The receiving endpoint, once multi-party RTT awareness is negotiated, must present text from different sources in readable groups with approximate relative timing.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_083": {
        "requirement_text": "For the case when the multi-party awareness negotiation was unsuccessful, the mixer SHALL compose a simulated limited multi-party RTT view suitable for presentation.",
        "document_section": "4.8.1",
        "description": "If multi-party awareness negotiation fails, the mixer must create a simulated limited multi-party RTT view for presentation.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_084": {
        "requirement_text": "Mixers SHALL be capable of handling both multi-party aware and multi-party unaware endpoints in the same multi-party session.",
        "document_section": "4.8.1",
        "description": "Mixers must handle both multi-party aware and unaware endpoints within the same session.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_085": {
        "requirement_text": "The downstream bridge MUST release the upstream bridge resources when no active call legs in the Upstream ESInet remain.",
        "document_section": "4.9.3",
        "description": "The downstream bridge must release upstream bridge resources when no active call legs remain in the upstream ESInet.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_086": {
        "requirement_text": "No specific text",
        "document_section": "4.9.3.1",
        "description": "No specific text.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_087": {
        "requirement_text": "No specific text",
        "document_section": "4.9.3.2",
        "description": "No specific text.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_088": {
        "requirement_text": "No specific text",
        "document_section": "4.9.4.1",
        "description": "No specific text.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_089": {
        "requirement_text": "No specific text",
        "document_section": "4.9.4.2",
        "description": "No specific text.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_090": {
        "requirement_text": "",
        "document_section": "",
        "description": "",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_091": {
        "requirement_text": "The OCIF MUST support all media types listed in this standard.",
        "document_section": "4.2",
        "description": "The OCIF must support all media types specified in this standard.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_092": {
        "requirement_text": "All callbacks MUST be marked with the value “psap-callback” in the Priority header field as documented in RFC 7090 [141].",
        "document_section": "4.2",
        "description": "All callbacks must be marked with “psap-callback” in the Priority header as per RFC 7090.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_093": {
        "requirement_text": "SIP INVITE messages for callbacks destined to be routed through an OCIF MUST contain: 1. A Request-URI line containing the callback URI;\n 2. A To header field populated with the callback URI. Usually the value is the content of the P-A-I (preferred, if present) or From header field of the original emergency call;",
        "document_section": "4.2",
        "description": "SIP INVITE messages for callbacks must include a Request-URI with the callback URI and a To header with the callback URI, derived from P-A-I or From headers of the original emergency call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_094": {
        "requirement_text": "The callback URI MUST contain a dialable telephone number either expressed as a national 10-digit NANP number or as an international number following ITU-T Recommendation E.164 and, if expressed as a sip URI, the domain part SHALL represent the home network of the target.",
        "document_section": "4.2",
        "description": "The callback URI must contain a dialable telephone number, either a national 10-digit NANP number or an international number, and if it is a SIP URI, the domain must be the target's home network.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_095": {
        "requirement_text": "If the original emergency call was from a non-service initialized handset, the callback number of the form “911 plus the last 7 digits of the ESN or IMEI expressed as a decimal” is not dialable and therefore MUST NOT be used for callback.",
        "document_section": "4.2",
        "description": "If the original emergency call was from a non-service initialized handset, the callback number of the form “911 plus last 7 digits of ESN or IMEI” is not dialable and must not be used for callbacks.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_096": {
        "requirement_text": "SIP INVITE messages for other outgoing calls that transit the ESInet through an OCIF MUST contain: 1. A Request-URI line containing the callback URI;\n 2. A To header field populated with the callback URI. Usually the value is the content of the P-A-I (preferred, if present) or From header field of the original emergency call;\n Note: The callback URI MUST contain a dialable telephone number either expressed as a national 10-digit NANP number or as an international number following ITU-T Recommendation E.164 and, if expressed as a sip URI, the domain part SHALL represent the home network of the target. If the original emergency call was from a non-service initialized handset, the callback number of the form “911 plus the last 7 digits of the ESN or IMEI expressed as a decimal” is not dialable and therefore MUST NOT be used for callback.\n 3. A From header field containing sip:TN@<psapdomain>;user=phone, which SHOULD be the same value as in the P-A-I header field¬¬;\n Note: The OCIF MUST support receipt of outgoing calls from PSAPs marked for presentation restriction of caller ID expressed by the presence of a Privacy header field (RFC 3323 [207], expanded by RFC 3325 [16] and RFC 7044 [35]) and the From header field value populated with \"Anonymous\" sip:anonymous@anonymous.invalid;\n 4. A Route header field populated with a routing URI that should contain the \"lr\" parameter to avoid Request-URI rewriting (the INVITE from the PSAP MAY contain the outgoing ESRP, or, if ESRPs are not used to route callbacks in the ESInet originating the callback, the OCIF URI. An INVITE from an ESRP to the OCIF SHALL contain the OCIF URI. The INVITE from the OCIF to the interconnected network SHALL contain the well-known URI associated with that network);\n 5. A SIP Priority header field with “psap-callback” as the value;\n 6. A Resource-Priority header field with “esnet.0” as the value;\n 7. A P-Asserted-Identity header field containing sip:TN@<psapdomain>;user=phone, where the TN is associated with the PSAP originating the call, and can be asserted by an Secure Telephone Identity Authentication Service (STI-AS) function;\n 8. A second P-Asserted-Identity header field containing the identity of the agent originating the call expressed as sip: “agent name” <agentID@agencyID>;\n Note: The Display Name part is OPTIONAL;\n 9. An SDP offer containing all media supported at the PSAP. The SDP SHOULD include offers matching the negotiated SDP from the original emergency call, placing the SDP that was used as the top-most value in the list;",
        "document_section": "4.2",
        "description": "SIP INVITE messages for other outgoing calls through the OCIF must follow similar structure, ensuring the callback URI, headers, and appropriate routing information are present.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_097": {
        "requirement_text": "SIP INVITE messages for other outgoing calls that transit the ESInet through an OCIF MUST contain: 1. A Request-URI line containing the target URI;\n 2. A To header field populated with the target URI, as determined by the initiating PSAP;\n Note: The target URI MUST contain a dialable telephone number either expressed as a national 10-digit NANP number or as an international number following ITU-T Recommendation E.164, or a sip URI that is routable within the ESInet, where the domain part represents the home network of the target.\n 3. A From header field containing sip:TN@<psapdomain>;user=phone, which SHOULD be the same as in the P-A-I header field;\n Note: The OCIF MUST support receipt of outgoing calls from i3-PSAPs marked for presentation restriction of caller ID, expressed by the presence of a Privacy header field (RFC 3323 [207], expanded by RFC 3325 [16] and RFC 7044 [35]) and the From header field value populated with \"Anonymous\" sip:anonymous@anonymous.invalid; \n 4. A Route header field populated with a routing URI that should contain the \"lr\" parameter to avoid Request-URI rewriting (the INVITE from the PSAP MUST contain the outgoing ESRP. The INVITE from the ESRP to the OCIF SHALL contain the OCIF URI. If the INVITE from the OCIF is to an interconnected network, it MAY contain the well-known URI associated with that network);\n 5. A Resource-Priority header field populated with an appropriate value based on section 3.1.7 (e.g., “esnet.0” or “esnet.2”) as determined by the originating PSAP;\n 6. A P-Asserted-Identity header field containing sip:TN@<psapdomain>;user=phone, where the TN is associated with the PSAP originating the call and can be asserted by an STI-AS function;\n 7. A second P-Asserted-Identity header field containing the identity of the agent originating the call expressed as sip:”agent name”<agentID@agencyID>;\n Note: the Display Name part is OPTIONAL\n 8. An SDP offer containing all media supported at the PSAP;",
        "document_section": "4.2",
        "description": "SIP INVITE messages for outgoing calls through the OCIF must follow the specified structure, ensuring proper inclusion of dialable numbers, headers, and routing information as required for the call’s successful routing.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_Note to Technical Committee Team: We are skippping reviewing the Policy, LoST, Event Notification, Discrepancy Reporting, Logging Sections for the time being and choosing to jump into the NG-PSAP DRAFT standard. The purpose of doing this is to focus directly on the CHE element and, as neeeded, the group will jump back into the i3 standard.": {
        "requirement_text": "",
        "document_section": "",
        "description": "",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_Come back and look at the Security Section 5, before concluding work on CHE.": {
        "requirement_text": "",
        "document_section": "",
        "description": "",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_Come back and look at the 3rd Party Origination Section 8, before concluding work on CHE.": {
        "requirement_text": "",
        "document_section": "",
        "description": "",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_000": {
        "requirement_text": "",
        "document_section": "",
        "description": "",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_We are going to start in section 2.3.7 \"CHE\" but we need to go back and do a review of the whole document before moving on.": {
        "requirement_text": "",
        "document_section": "",
        "description": "",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_098": {
        "requirement_text": "An i3 PSAP compliant CHFE MUST implement the following interfaces.",
        "document_section": "2.3.7.1",
        "description": "An i3 PSAP-compliant CHFE must implement the required interfaces.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_099": {
        "requirement_text": "The CHFE MUST subscribe to Management Console’s PSAP Service State/Security Posture notifications per the specifications in the Service State section of NENA STA-010.",
        "document_section": "2.3.7.1.1",
        "description": "The CHFE must subscribe to PSAP Service State/Security Posture notifications from the Management Console as defined in the Service State section of NENA STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_100": {
        "requirement_text": "Upon any change to the Service State of the PSAP, the QueueState of any queues the CHFE manages MUST be set to represent the current PSAP Service State with an appropriate value per the mapping specified in the Queue State Subscription section of this document",
        "document_section": "2.3.7.1.1",
        "description": "Any change to the PSAP Service State must result in the CHFE updating the QueueState for any managed queues to reflect the current PSAP Service State according to the mapping in the Queue State Subscription section.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_101": {
        "requirement_text": "Elements implementing the CHFE MUST implement the notifier side of the Element State 896 subscription mechanism as specified in the Element State section of the NENA-STA-010 897 [xxx].",
        "document_section": "2.3.7.1.2",
        "description": "Elements implementing the CHFE must support the notifier side of the Element State subscription mechanism as specified in the Element State section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_102": {
        "requirement_text": "The CHFE MUST implement event rate filters as described in 902 RFC 6446 [XXX].",
        "document_section": "2.3.7.1.2",
        "description": "The CHFE must implement event rate filters as per RFC 6446.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_103": {
        "requirement_text": "Upon acceptance, the CHFE MUST send an initial NOTIFY message containing the following information: ● elementDomain: TBD ● reason: reason for change ● state: current state of the Element, MUST be a value found in the elementState registry.",
        "document_section": "2.3.7.1.2",
        "description": "Upon acceptance, the CHFE must send an initial NOTIFY message containing the elementDomain, reason for change, and current state (must be a value found in the elementState registry).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_104": {
        "requirement_text": "Upon any change to the Element’s state and respecting any rate filter the subscriber may have specified, the CHFE MUST generate a NOTIFY message containing the updated information.",
        "document_section": "2.3.7.1.2",
        "description": "The CHFE must generate a NOTIFY message upon any change to the Element’s state, respecting the rate filters specified by the subscriber.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_105": {
        "requirement_text": "The CHFE MUST implement the SIP call interface as defined in the SIP Call section of NENA-STA-010 [XXX], including support for PSAP Call Control features as specified in Appendix C of NENA-STA-010, in jurisdictions where PSAP Call Control features are desired or required.",
        "document_section": "2.3.7.1.3",
        "description": "The CHFE must implement the SIP call interface defined in the SIP Call section of NENA-STA-010, including PSAP Call Control features where needed as per Appendix C of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_106": {
        "requirement_text": "The CHFE MUST support multiple Queues, although a small PSAP might use only one Queue.",
        "document_section": "2.3.7.1.4",
        "description": "The CHFE must support multiple Queues, though a small PSAP might use only one.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_107": {
        "requirement_text": "Each Queue MUST have a globally unique name as defined in the Queue Identifier section of NENA-STA-010 [XXX] where the host part must contain in whole or in part the Agency Identifier of the Agency owning or subscribing to the CHFE.",
        "document_section": "2.3.7.1.4",
        "description": "Each Queue must have a globally unique name defined in the Queue Identifier section of NENA-STA-010, where the host part includes the Agency Identifier of the Agency owning or subscribing to the CHFE.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_108": {
        "requirement_text": "The CHFE MUST implement the client side of the DequeueRegistration Web Service mechanism as specified in the DequeueRegistration Web Service section of NENA-STA-010 [XXX].",
        "document_section": "2.3.7.1.5",
        "description": "The CHFE must implement the client side of the DequeueRegistration Web Service mechanism as defined in NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_109": {
        "requirement_text": "For each queue the CHFE can receive calls on, the CHFE MUST register to dequeue as specified in the DequeueRegistration Web Service section of NENA-STA-010.",
        "document_section": "2.3.7.1.5",
        "description": "The CHFE must register to dequeue calls for each queue it can receive calls on, as defined in the DequeueRegistration Web Service section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_110": {
        "requirement_text": "The CHFE MUST renew a registration prior to its expiry.",
        "document_section": "2.3.7.1.5",
        "description": "The CHFE must renew its registration prior to its expiration.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_111": {
        "requirement_text": "The CHFE MUST unregister when appropriate, for example if the system is about to go out of service or a queue is about to be removed.",
        "document_section": "2.3.7.1.5",
        "description": "The CHFE must unregister when appropriate, such as when going out of service or removing a queue.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_112": {
        "requirement_text": "A queue’s Dequeue Registration state MUST not affect the CHFE’s ability to process a call on that queue.",
        "document_section": "2.3.7.1.5",
        "description": "A queue’s Dequeue Registration state must not affect the CHFE’s ability to process a call on that queue.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_113": {
        "requirement_text": "The CHFE MUST implement the notifier side of the Queue State subscription mechanism as specified in the QueueState Event Package section of the NENA-STA-010 [xxx].",
        "document_section": "2.3.7.1.6",
        "description": "The CHFE must implement the notifier side of the Queue State subscription mechanism as specified in the QueueState Event Package section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_114": {
        "requirement_text": "Upon reception of a SUBSCRIBE request addressed with the Queue Identifier and specifying the emergency-QueueState event package, the CHFE MUST consult the policy (queueState) to determine if the requester is permitted to subscribe. If not, the CHFE returns 603 Decline. The CHFE determines whether the specified queue is one managed by the CHFE. If not, the CHFE returns 488 Not Acceptable Here. If the request is acceptable, the CHFE returns 200 OK.",
        "document_section": "2.3.7.1.6",
        "description": "Upon receiving a SUBSCRIBE request with the Queue Identifier and specifying the emergency-QueueState event package, the CHFE must consult the policy to determine if the subscriber is permitted to subscribe and respond accordingly.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_115": {
        "requirement_text": "The CHFE MUST implement event rate filters, RFC 6446 [XXX].",
        "document_section": "2.3.7.1.6",
        "description": "The CHFE must implement event rate filters as per RFC 6446.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_116": {
        "requirement_text": "Upon acceptance, the CHFE MUST send an initial NOTIFY message.",
        "document_section": "2.3.7.1.6",
        "description": "Upon acceptance of a subscription, the CHFE must send an initial NOTIFY message.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_117": {
        "requirement_text": "NOTIFY messages contain the following information: ● state: current QueueState of the queue, MUST be a value found in the queueState registry.",
        "document_section": "2.3.7.1.6",
        "description": "NOTIFY messages must include the current QueueState of the queue, as defined in the queueState registry.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_118": {
        "requirement_text": "Upon any change to the Queue’s state (which includes when calls are queued and dequeued) and respecting any rate filter the subscriber may have specified, the CHFE MUST generate a QueueState NOTIFY message containing the updated state information.",
        "document_section": "2.3.7.1.6",
        "description": "Upon any change to the Queue’s state (e.g., when calls are queued or dequeued), the CHFE must generate a QueueState NOTIFY message containing updated state information, respecting any rate filters.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_119": {
        "requirement_text": "The CHFE QueueState MUST represent the current PSAP Service State with an appropriate value per the following table:",
        "document_section": "2.3.7.1.6",
        "description": "The CHFE QueueState must reflect the current PSAP Service State with an appropriate value.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_120": {
        "requirement_text": "The CHFE MUST implement the subscriber side of the ESRP notifications subscription mechanism as specified in the ESRPnotify Event Package section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.1.7",
        "description": "The CHFE must implement the subscriber side of the ESRP notifications subscription mechanism as specified in the ESRPnotify Event Package section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_121": {
        "requirement_text": "The CHFE MUST send a SUBSCRIBE request to provisioned ESRP URIs specifying the emergency-ESRPnotify event package",
        "document_section": "2.3.7.1.7",
        "description": "The CHFE must send a SUBSCRIBE request to provisioned ESRP URIs specifying the emergency-ESRPnotify event package.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_122": {
        "requirement_text": "The CHFE MUST implement the subscriber side of the AbandonedCall notifications subscription mechanism as specified in the AbandonedCall Event section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.1.8",
        "description": "The CHFE must implement the subscriber side of the AbandonedCall notifications subscription mechanism as specified in the AbandonedCall Event section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_123": {
        "requirement_text": "The CHFE, at startup time, MUST send a SUBSCRIBE request to provisioned ESRP URIs specifying the emergency-AbandonedCall event package and MUST maintain the subscriptions active at all time.",
        "document_section": "2.3.7.1.8",
        "description": "Upon startup, the CHFE must send a SUBSCRIBE request to provisioned ESRP URIs for the emergency-AbandonedCall event package and keep the subscriptions active.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_124": {
        "requirement_text": "The CHFE MUST implement the ability to alert Call Takers of Abandoned Calls and upon reception of an Abandoned Call notification, if enabled by local policy, MUST alert appropriate Call Taker(s) of the abandonment of a call.",
        "document_section": "2.3.7.1.8",
        "description": "The CHFE must alert Call Takers about Abandoned Calls, if enabled by local policy, upon receiving an Abandoned Call notification.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_125": {
        "requirement_text": "The CHFE MUST notify EIDO subscribers of the callCancel call state change.",
        "document_section": "2.3.7.1.8",
        "description": "The CHFE must notify EIDO subscribers about callCancel state changes.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_126": {
        "requirement_text": "The CHFE MUST implement support for Test Calls as specified in the Test Calls section of STA-010 [XXX].",
        "document_section": "2.3.7.1.9",
        "description": "The CHFE must implement support for Test Calls as specified in the Test Calls section of STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_127": {
        "requirement_text": "The CHFE MUST support test calls signaled with both the urn:service:test.sos and urn:emergency:service:test Service URN trees.",
        "document_section": "2.3.7.1.9",
        "description": "The CHFE must support test calls signaled with the urn:service:test.sos and urn:emergency:service:test Service URN trees.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_128": {
        "requirement_text": "Upon reception of a Test Call request addressed with a Queue Identifier, the CHFE MUST consult the policy (TBD) to determine if the function is enabled and if the requester is permitted to place such test call.",
        "document_section": "2.3.7.1.9",
        "description": "Upon receiving a Test Call request with a Queue Identifier, the CHFE must consult policy to determine if the function is enabled and if the requester is permitted to place the test call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_129": {
        "requirement_text": "If not, the CHFE returns 603 Decline.",
        "document_section": "2.3.7.1.9",
        "description": "If the request is not permitted, the CHFE must return 603 Decline.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_130": {
        "requirement_text": "Policy must also specify the maximum rate of test calls from a given source and if exceeded, CHFE MUST return a 486 Busy Here response.",
        "document_section": "2.3.7.1.9",
        "description": "Policy must specify the maximum rate of test calls from a given source, and if exceeded, the CHFE must return a 486 Busy Here response.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_131": {
        "requirement_text": "If the Service URN found in the Request URI is not supported by the CHFE, it MUST return a 404 Not Found.",
        "document_section": "2.3.7.1.9",
        "description": "If the Service URN in the Request URI is unsupported by the CHFE, it must return a 404 Not Found.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_132": {
        "requirement_text": "The PSAP MUST loop back no more than three (3) packets of each media type accepted (voice, video, text).",
        "document_section": "2.3.7.1.9",
        "description": "The PSAP must loop back no more than three packets of each accepted media type (voice, video, text) for Test Calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_133": {
        "requirement_text": "After automatically answering the Test Call and if applicable, looping back the media, the CHFE MUST send a BYE to terminate the Test Call.",
        "document_section": "2.3.7.1.9",
        "description": "After automatically answering the Test Call and looping back the media (if applicable), the CHFE must send a BYE message to terminate the Test Call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_134": {
        "requirement_text": "The CHFE MUST be able to receive the calling device’s location in a Geolocation header field by either value within an INVITE or MESSAGE body or via a reference.",
        "document_section": "2.3.7.1.10",
        "description": "The CHFE must be able to receive the calling device’s location in a Geolocation header field, either within an INVITE or MESSAGE body or via reference.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_135": {
        "requirement_text": "The CHFE MUST support references with schemes of HTTP(S) and SIP(S).",
        "document_section": "2.3.7.1.10",
        "description": "The CHFE must support references with schemes of HTTP(S) and SIP(S).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_136": {
        "requirement_text": "If the scheme is HTTP(S), the CHFE MUST utilize the mechanism specified in HELD Dereferencing (RFC 6753 [XXX]) to retrieve the location.",
        "document_section": "2.3.7.1.10",
        "description": "If the scheme is HTTP(S), the CHFE must use HELD Dereferencing (RFC 6753) to retrieve the location.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_137": {
        "requirement_text": "If the scheme is SIP(S), the CHFE MUST utilize the mechanism specified in the SIP Presence Event Package (RFC 3856 [XXX]).",
        "document_section": "2.3.7.1.10",
        "description": "If the scheme is SIP(S), the CHFE must use the SIP Presence Event Package (RFC 3856) to retrieve the location.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_138": {
        "requirement_text": "For SIP location conveyance, the CHFE MUST be able to control the rate of location update notifications through location filters (RFC 6447 [XXX]) and event rate control filters (RFC 6446 [XXX]).",
        "document_section": "2.3.7.1.10",
        "description": "For SIP location conveyance, the CHFE must control the rate of location updates through location filters (RFC 6447) and event rate control filters (RFC 6446).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_139": {
        "requirement_text": "The CHFE MUST support the reception of multiple Geolocation: header fields.",
        "document_section": "2.3.7.1.10",
        "description": "The CHFE must support the reception of multiple Geolocation header fields.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_140": {
        "requirement_text": "If multiple Geolocation header fields are provided, the location in the first Geolocation header field SHALL be assumed to be the location used for call routing.",
        "document_section": "2.3.7.1.10",
        "description": "If multiple Geolocation header fields are provided, the location in the first header field must be used for call routing.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_141": {
        "requirement_text": "Subsequent requests for dispatch location MUST be accomplished by setting the ‘responseTime’ value to ‘emergencyDispatch’ per STA-010.",
        "document_section": "2.3.7.1.10",
        "description": "Subsequent dispatch location requests must be accomplished by setting the ‘responseTime’ value to ‘emergencyDispatch’ as per STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_142": {
        "requirement_text": "The CHFE SHALL implement the LoST client interface to support interaction with the ECRF as specified in the LoST subsection of the Interfaces section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.1.11",
        "description": "The CHFE must implement the LoST client interface to interact with the ECRF as specified in the LoST subsection of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_143": {
        "requirement_text": "The CHFE MUST query the ECRF, when necessary, to permit transfer of a call to any of the available services for the given location.",
        "document_section": "2.3.7.1.11",
        "description": "The CHFE must query the ECRF when necessary to facilitate call transfer to the appropriate services for the given location.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_144": {
        "requirement_text": "The CHFE MUST support interfacing with additional SIP call sources/destinations.",
        "document_section": "2.3.7.1.12",
        "description": "The CHFE must support interfacing with additional SIP call sources/destinations.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_145": {
        "requirement_text": "The interface MUST comply to the SIPConnect 2.0 Technical Recommendation [XXX https://www.sipforum.org/download/sipconnect-technicalrecommendation-version-2-0/?wpdmdl=2818].",
        "document_section": "2.3.7.1.12",
        "description": "The interface must comply with the SIPConnect 2.0 Technical Recommendation.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_146": {
        "requirement_text": "The CHFE MUST implement the client side of the EIDO Dereference Factory web service specified in the NENA EIDO Conveyance Standard (STA-024 [XXX]).",
        "document_section": "2.3.7.1.13",
        "description": "The CHFE must implement the client side of the EIDO Dereference Factory web service as specified in the NENA EIDO Conveyance Standard (STA-024).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_147": {
        "requirement_text": "A CHFE implementation MUST support both the Conference Aware UA and Ad Hoc Bridging methods as specified in section Bridging and Transfers in STA-010 [XXX] and MUST be provisioned with the appropriate method as specified by the NGCS Service Provider.",
        "document_section": "2.3.7.1.14",
        "description": "The CHFE must support both the Conference Aware UA and Ad Hoc Bridging methods as per STA-010 and be provisioned with the appropriate method by the NGCS Service Provider.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_148": {
        "requirement_text": "If a call is received specifying it originated from a Bridge, the CHFE MUST use the Bridge to add parties to the call, in order to avoid cascading conferences.",
        "document_section": "2.3.7.1.14",
        "description": "If a call originates from a Bridge, the CHFE must use the Bridge to add parties to the call, avoiding cascading conferences.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_149": {
        "requirement_text": "The CHFE MUST support the configuration of URI-List as specified in RFC 5363 [XXX] and use a URI-List to add one or more parties to a call at the same time as per RFC 5366 [XXX].",
        "document_section": "2.3.7.1.14",
        "description": "The CHFE must support URI-List configuration as specified in RFC 5363 and use it to add multiple parties to a call, following RFC 5366.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_150": {
        "requirement_text": "The CHFE MUST publish Call Taker (Agent) ActivityState changes to the Presence Server as specified in section Presence Server.",
        "document_section": "2.3.7.1.16",
        "description": "The CHFE must publish Call Taker (Agent) ActivityState changes to the Presence Server as specified in the Presence Server section.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_151": {
        "requirement_text": "If Agent ActivityState is required for the CHFE to distribute calls, then the CHFE MUST subscribe to the Presence Server as specified in section Presence Server to obtain that information.",
        "document_section": "2.3.7.1.16",
        "description": "If Agent ActivityState is required for the CHFE to distribute calls, it must subscribe to the Presence Server to obtain that information.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_152": {
        "requirement_text": "The CHFE MUST be provisioned with the Presence Server selected by the Agency.",
        "document_section": "2.3.7.1.16",
        "description": "The CHFE must be provisioned with the Presence Server selected by the Agency.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_153": {
        "requirement_text": "The CHFE MUST implement support for RTP-based multimedia communications as specified in the Media section and the Media Mixing section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.1.17",
        "description": "The CHFE must implement support for RTP-based multimedia communications as defined in the Media and Media Mixing sections of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_154": {
        "requirement_text": "The CHFE MUST implement support for Audio, Video and Real-Time Text (RTT).",
        "document_section": "2.3.7.1.17",
        "description": "The CHFE must implement support for Audio, Video, and Real-Time Text (RTT).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_155": {
        "requirement_text": "The CHFE MUST implement support for the following audio codecs: G.711µ-law, G.711 A-law [xxx], AMR (a.k.a. AMRNB and AMR-WB) (G.722.2 [xxx]).",
        "document_section": "2.3.7.1.17",
        "description": "The CHFE must implement support for the following audio codecs: G.711µ-law, G.711 A-law, and AMR (including AMR-NB and AMR-WB).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_156": {
        "requirement_text": "The CHFE MUST identify the active party(ies) in a conference call as designated in the SSRC field of the received RTP packets.",
        "document_section": "2.3.7.1.17",
        "description": "The CHFE must identify active parties in a conference call using the SSRC field in the received RTP packets.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_157": {
        "requirement_text": "The CHFE MUST implement support for multiparty RTT mixing to support multimedia conference calls as specified in RFC 9071 [XXX].",
        "document_section": "2.3.7.1.17",
        "description": "The CHFE must support multiparty RTT mixing for multimedia conference calls, as defined in RFC 9071.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_158": {
        "requirement_text": "The CHFE MUST implement support for Instant Messaging as specified in section Instant Messaging of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.1.17",
        "description": "The CHFE must support Instant Messaging as per the Instant Messaging section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_159": {
        "requirement_text": "In order to comply with the Americans with Disabilies Act requirements, the CHFE MUST implement support for receiving and sending characters encoded as Baudot tones [XXX] over an audio RTP stream.",
        "document_section": "2.3.7.1.17",
        "description": "To comply with the Americans with Disabilities Act, the CHFE must support receiving and sending characters encoded as Baudot tones over an audio RTP stream.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_160": {
        "requirement_text": "The CHFE MUST log every reception or transmission of call signaling messages using the CallSignalingMessageLogEvent.",
        "document_section": "2.3.7.2",
        "description": "The CHFE must log every reception or transmission of call signaling messages using the CallSignalingMessageLogEvent.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_161": {
        "requirement_text": "Upon reception of an INVITE on any interface defined in this section, if the call does not have a Call Identifier (i.e. a Call-Info header with purpose=emergency-CallId), the CHFE MUST assign one to the call as per section Call Identifier of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.2",
        "description": "Upon receiving an INVITE without a Call Identifier, the CHFE must assign one as specified in NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_162": {
        "requirement_text": "If the INVITE does not have an Incident Tracking Identifier (i.e., a Call-Info header with purpose=emergency-IncidentId), the CHFE must assign one as specified in the Incident Tracking Identifier section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.2",
        "description": "If the INVITE lacks an Incident Tracking Identifier, the CHFE must assign one as outlined in the relevant section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_163": {
        "requirement_text": "Every queue MUST be provisioned with a Call Priority Identifier, which must be one of: Highest, High, Normal, Low, Lowest.",
        "document_section": "2.3.7.2",
        "description": "Every queue must be assigned a Call Priority Identifier, which can be one of Highest, High, Normal, Low, or Lowest.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_164": {
        "requirement_text": "Calls received with a Request-URI of urn:service:sos MUST be assigned the Call Priority Identifier of High or Highest.",
        "document_section": "2.3.7.2",
        "description": "Calls with a Request-URI of urn:service:sos must be assigned a Call Priority Identifier of High or Highest.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_165": {
        "requirement_text": "If the call was received on a Queue which is provisioned with a Call Priority Identifier of Normal, Low or Lowest, but the Request-URI is an emergency Service URN (i.e. the call is an emergency call), the CHFE MUST assign the call a Call Priority Identifier of either High or Highest.",
        "document_section": "2.3.7.2",
        "description": "Emergency calls received on lower-priority queues must be assigned a Call Priority Identifier of High or Highest.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_166": {
        "requirement_text": "If any emergency call does not include a location, or contains a default location, the Calltaker MUST be informed.",
        "document_section": "2.3.7.2",
        "description": "If an emergency call lacks location information or has a default location, the Calltaker must be informed.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_167": {
        "requirement_text": "The CHFE MUST implement support for Reliable Provisional Responses as specified in Reliability of Provisional Responses in the Session Initiation Protocol (SIP) (PRACK, RFC 3262 [xxx]).",
        "document_section": "2.3.7.2.1",
        "description": "The CHFE must support Reliable Provisional Responses (PRACK) in line with RFC 3262.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_168": {
        "requirement_text": "PRACK MUST be used if the INVITE’s Require header or the INVITE’s Supported header contains the option tag 100Rel.",
        "document_section": "2.3.7.2.1",
        "description": "PRACK must be used if the INVITE’s Require or Supported header contains the 100Rel option tag.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_169": {
        "requirement_text": "The CHFE MUST implement support for the following calling party identifiers: ● A SIP URI \n ● A TEL URI \n ● A SIP URI with parameter user=phone",
        "document_section": "2.3.7.2.1",
        "description": "The CHFE must support the following calling party identifiers: SIP URI, TEL URI, and SIP URI with the parameter user=phone.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_170": {
        "requirement_text": "The CHFE MUST implement support for PSTN identifiers formatted as an E.164 global number as specified in RFC 3966 section 5.1.4 [XXX].",
        "document_section": "2.3.7.2.1",
        "description": "The CHFE must support PSTN identifiers formatted as an E.164 global number as specified in RFC 3966 section 5.1.4.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_171": {
        "requirement_text": "Upon reception of a call INVITE, the CHFE MUST do the following: ● Log a CallStartLogEvent; the standardPrimaryCallType, “to”, and “from” elements MUST be populated \n ● Log a SessionStartLogEvent. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallStateChangeLogEvent with state set to callBegin ● If the call is an emergency call: \n o notify authorized EIDO Subscribers of the reception of the new emergency call o Log the EidoLogEvent.",
        "document_section": "2.3.7.2.1",
        "description": "Upon reception of a call INVITE, the CHFE must log various events, including CallStartLogEvent, SessionStartLogEvent, and CallStateChangeLogEvent, and notify authorized EIDO Subscribers if the call is an emergency.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_172": {
        "requirement_text": "If AgentState is required for proper distribution, the CHFE MUST subscribe to the Presence Server to receive notifications of the appropriate Agent and/or ActivityState.",
        "document_section": "2.3.7.2.1",
        "description": "If AgentState is required, the CHFE must subscribe to the Presence Server for notifications about the appropriate Agent or ActivityState.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_173": {
        "requirement_text": "When the call is offered to one or more Call Taker(s), the CHFE MUST notify authorized EIDO Subscribers of the offering of the call, specifying the Call Taker(s) the call is offered to.",
        "document_section": "2.3.7.2.1",
        "description": "When the call is offered to Call Takers, the CHFE must notify authorized EIDO Subscribers, specifying which Call Takers the call is offered to.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_174": {
        "requirement_text": "If one or more Call Taker(s) need to be alerted of the incoming call, then the CHFE MUST do the following: ● Log a CallStateChangeLogEvent with state set to callAlerting, one for each Call Taker the call is offered to \n ● Log a SessionStateChangeLogEvent with state set to callAlerting, one for each Call Taker the call is offered to \n ● If the call is an emergency call: \n o Notify all authorized EIDO Subscribers of the alerting of the call, with an EIDO which includes all alerted Call Takers",
        "document_section": "2.3.7.2.1",
        "description": "If one or more Call Takers need to be alerted, the CHFE must log the appropriate CallStateChangeLogEvent and SessionStateChangeLogEvent and notify authorized EIDO Subscribers, especially if the call is an emergency.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_175": {
        "requirement_text": "Otherwise, if no announcement is to be played, the CHFE MUST Return a 182 Queued or a 180 Ringing provisional response.",
        "document_section": "2.3.7.2.1",
        "description": "If no announcement is to be played, the CHFE must return a 182 Queued or a 180 Ringing provisional response.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_176": {
        "requirement_text": "When the call is queued, the CHFE MUST: ● Log a CallStateChangeLogEvent with state set to callQueued \n ● Log a SessionStateChangeLogEvent with state set to callQueued ● Notify all EIDO Subscribers of the queuing of the call",
        "document_section": "2.3.7.2.1",
        "description": "When a call is queued, the CHFE must log the relevant events and notify all EIDO Subscribers about the queuing of the call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_177": {
        "requirement_text": "If a CANCEL is received prior to the call being answered by a Call Taker, or in the case the session was answered to play an interactive announcement and a BYE is received, the CHFE MUST do the following: ● Log a CallStateChangeLogEvent with state set to callCancel \n ● Log a SessionStateChangeLogEvent with state set to callCancel if the session was never answered, or callEnd if the session was answered to play an interactive announcement \n ● Log a CallEndLogEvent \n ● Log a SessionEndLogEvent \n ● Notify all EIDO Subscribers of the cancelling of the call \n ● CHFE MUST implement the ability to alert Call Takers of Abandoned Calls and if enabled by local policy, alert appropriate Call Taker(s) of the abandonment of the call.",
        "document_section": "2.3.7.2.1",
        "description": "If a CANCEL is received before the call is answered or after an interactive announcement, the CHFE must log the appropriate events and notify all EIDO Subscribers, with the ability to alert Call Takers of Abandoned Calls if local policy allows.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_178": {
        "requirement_text": "The CHFE MUST implement the ability to answer a call and present it to a Call Taker (a feature sometimes called automatic answer).",
        "document_section": "2.3.7.2.1",
        "description": "The CHFE must have the ability to automatically answer a call and present it to a Call Taker.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_179": {
        "requirement_text": "If the call is auto answered, the CHFE MUST implement the ability to notify the Call Taker when answered.",
        "document_section": "2.3.7.2.1",
        "description": "If the call is auto-answered, the CHFE must notify the Call Taker when the call is answered.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_180": {
        "requirement_text": "The CHFE MUST allow the Call Taker to interrupt an auto-greeting.",
        "document_section": "2.3.7.2.1",
        "description": "The CHFE must allow the Call Taker to interrupt an auto-greeting.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_181": {
        "requirement_text": "The greeting MUST be in the form of all media accepted for the call (audio, video and/or text).",
        "document_section": "2.3.7.2.1",
        "description": "The greeting must be in the form of all media accepted for the call, such as audio, video, and/or text.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_182": {
        "requirement_text": "The CHFE MUST have the ability to allow a Call Taker to record their own greeting to be played, if permitted by policy.",
        "document_section": "2.3.7.2.1",
        "description": "The CHFE must allow the Call Taker to record their own greeting, if allowed by policy.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_183": {
        "requirement_text": "When a call is answered by a Call Taker (and not by an IMR), the CHFE MUST do the following: ● Log a CallStateChangeLogEvent with the state set to callAnswered \n ● Log a SessionStateChangeLogEvent with the state set to callAnswered (unless it was already logged for the session) \n ● Log a MediaStartLogEvent for each media negotiated (audio, video and/or text) (if not already logged for the session) \n ● If a greeting is played the CHFE MUST log an AnnouncementStartLogEvent when the announcement starts being transmitted and the CHFE MUST log an \n AnnouncementStopLogEvent when the announcement stops being transmitted, all with announcementType of AutoAnswerGreeting \n ● Notify all EIDO Subscribers of the answering of the call, with an EIDO which only specifies the agentId of the Call Taker that answered the call (and not other Call Takers that were offered the call)",
        "document_section": "2.3.7.2.1",
        "description": "When a call is answered by a Call Taker, the CHFE must log the appropriate events, including the answering, any greeting transmission, and notify all EIDO Subscribers of the answer.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_184": {
        "requirement_text": "The CHFE MUST be able to receive emergency calls from External Switching Systems, for example, on a queue dedicated to a telephone number advertised for such a purpose.",
        "document_section": "2.3.7.2.2",
        "description": "The CHFE must be able to receive emergency calls from External Switching Systems, such as those directed to a dedicated telephone number.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_185": {
        "requirement_text": "All calls received on such a queue MUST be assigned a Call Priority Identifier of High or Highest as specified above, no different than if they were received from the ESInet.",
        "document_section": "2.3.7.2.2",
        "description": "All calls received on such a queue must be assigned a Call Priority Identifier of High or Highest.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_186": {
        "requirement_text": "Because such calls will not have a location upon reception, the CHFE MUST assign a location, either a default location, or optionally, a better location (from a reverse telephone number database or from previous calls received from the same calling number).",
        "document_section": "2.3.7.2.2",
        "description": "Since such calls won't have a location upon reception, the CHFE must assign a location, either a default or a better one from available sources.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_187": {
        "requirement_text": "The CHFE MUST be able to process Non-Interactive Calls, also called data-only emergency calls, as specified in the Non-interactive calls section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.2.3",
        "description": "The CHFE must be able to process Non-Interactive Calls, which are data-only emergency calls as specified in NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_188": {
        "requirement_text": "Upon reception of a MESSAGE , the CHFE MUST do the following: ● Log a CallStartLogEvent. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallEndLogEvent \n ● If the MESSAGE request is accepted o Return a 200 OK regardless of Agent availability o Notify authorized EIDO Subscribers of the reception of the new noninteractive call. o Log the EidoLogEvent. o Alert one or more Agents of non-interactive call reception. o Notify authorized EIDO Subscribers of the alerting of Agents. \n ● Else return an appropriate final response.",
        "document_section": "2.3.7.2.3",
        "description": "Upon receiving a MESSAGE, the CHFE must log the relevant events, return a 200 OK response if accepted, notify EIDO Subscribers, alert Agents, and handle appropriate final responses if not accepted.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_189": {
        "requirement_text": "The CHFE MUST be able to make outgoing calls as specified in this section.",
        "document_section": "2.3.7.2.4",
        "description": "The CHFE must be able to make outgoing calls as specified.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_190": {
        "requirement_text": "All outgoing calls routed via the ESInet MUST be routed using the NGCS Outbound Call Interface Function (OCIF).",
        "document_section": "2.3.7.2.4",
        "description": "All outgoing calls routed via the ESInet must use the NGCS Outbound Call Interface Function (OCIF).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_191": {
        "requirement_text": "The CHFE MUST be able to request that the identity of the calling PSAP is not to be divulged to the called party when making a Callback Call, a Follow-Up Call or a NonEmergency Call via OCIF or ESS.",
        "document_section": "2.3.7.2.5",
        "description": "The CHFE must have the ability to request that the calling PSAP's identity not be revealed during Callback, Follow-Up, or Non-Emergency calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_192": {
        "requirement_text": "The CHFE MUST also be able to override privacy when the facilities used to make the call have privacy enabled by default by including a Privacy header with value set to “none”.",
        "document_section": "2.3.7.2.5",
        "description": "The CHFE must also be able to override privacy settings by including a Privacy header with the value “none.”",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_193": {
        "requirement_text": "The CHFE MUST be able to perform callbacks of 9-1-1 calls that have ended, within a configurable amount of time of its reception.",
        "document_section": "2.3.7.2.6",
        "description": "The CHFE must be able to perform callbacks for 9-1-1 calls within a configurable time frame after reception.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_194": {
        "requirement_text": "The CHFE MUST NOT originate a callback request if the time that has elapsed since the reception of the emergency 9-1-1 call being called back is greater than the configured callback period value.",
        "document_section": "2.3.7.2.6",
        "description": "The CHFE must not initiate a callback if the time elapsed since the 9-1-1 call exceeds the configured callback period.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_195": {
        "requirement_text": "Callbacks MUST always be sent to the NGCS Outbound Call InterFace (OCIF).",
        "document_section": "2.3.7.2.6",
        "description": "All callbacks must be routed via the NGCS Outbound Call Interface (OCIF).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_196": {
        "requirement_text": "If the emergency 9-1-1 call being called back was received with both a SIP and a TEL callback URI, the SIP URI MUST be used first (if that callback attempt fails, then the TEL URI is used).",
        "document_section": "2.3.7.2.6",
        "description": "If both a SIP and a TEL callback URI are available for a 9-1-1 call, the SIP URI must be used first, followed by the TEL URI if the SIP attempt fails.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_197": {
        "requirement_text": "To perform a callback, the CHFE MUST: ● Craft and send to the OCIF an INVITE request with the following: \n o Request URI specifying the callback URI o From header in one of the two following forms: \n ▪ If privacy is not necessary, the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for callback purposes (this is necessary in order for the NGCS to properly assert the identity of the PSAP) \n ▪ If privacy is necessary, From header MUST specify URI sip:anonymous@anonymous.invalid \n o Privacy header with one of the two following values: \n ▪ If privacy is not necessary: \n ● If facilities used for the call are not provisioned with privacy by default, the CHFE SHOULD include a Privacy header with value “none” \n ● If the facilites are provisioned with privacy by default, the CHFE \n MUST include a Privacy header with value “none” \n ▪ If privacy is necessary, the CHFE MUST include a Privacy header with the value “id” \n o A first P-Asserted-Identity header in the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying one of the PSAP’s \n URIs provisioned for callback purposes (this is necessary in order for the \n NGCS to properly assert the identity of the PSAP) o A second P-Asserted-Identity specifying the identity of the agent originating the callback, in the form “sip: “Agent name” <Agent Identifier>” (display name optional) \n o An Identity header that contains a PASSporT (RFC 8225 [xxx]) consisting of the calling TN signed using a certificate traceable to the PCA associated with the agent or agency identified in the second P-Asserted-Identity header (see above). Specifically: \n o the PASSporT header information consisting of: \n ● “typ” = “passport” \n ● \"alg\" = \"ES256\", \n ● \"x5u\" = the URI associated with a certificate traceable to the PCA associated with the agent or agency identified in the second P-\n Asserted-Identity header o PASSporT payload information consisting of: \n ● “dest” claim = callback TN from the To header/Request URI line \n ● “iat” (Issued At) claim = the date and time of issuance of the token/origination of the call \n ● “orig” claim = PSAP calling TN from P-Asserted-Identity header (see \n #7 above) \n o Priority header value of “psap-callback” as per RFC 7090 [xxx] o Resource-Priority header value of “esnet.0” as specified in STA-010 o Route header value set to the OCIF’s URI and “lr” parameter o A Call-Info header containing a new Call Identifier o A Call-Info header containing the Incident Tracking Identifier for the Incident to which the call applies \n o An SDP Offer which includes all supported media choices, subject to operational considerations, which includes the media and codecs negotiated for the emergency 9-1-1 call as preferred (top-most of the Offer) \n ● Log a CallStartLogEvent where standardPrimaryCallType is set to “callback”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a SessionStartLogEvent where standardPrimaryCallType is set to “callback”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallStateChangeLogEvent with state set to callBegin \n ● Log a SessionStateChangeLogEvent with state set to callBegin \n ● Notify authorized EIDO Subscribers of the origination of callback",
        "document_section": "2.3.7.2.6",
        "description": "To perform a callback, the CHFE must send an INVITE request to the OCIF, including necessary headers for privacy, identity, and the callback URI. The CHFE must log various call and session events and notify authorized EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_198": {
        "requirement_text": "The CHFE MUST be able to return a call to a previous 9-1-1 caller after the callback period timer has elapsed and while the Incident is active.",
        "document_section": "2.3.7.2.7",
        "description": "The CHFE must be able to return a call to a previous 9-1-1 caller after the callback period timer has elapsed and while the Incident is still active.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_199": {
        "requirement_text": "Follow-Up Calls MUST always be sent to the NGCS Outbound Call Interface Function (OCIF).",
        "document_section": "2.3.7.2.7",
        "description": "Follow-Up Calls must always be routed through the NGCS Outbound Call Interface Function (OCIF).",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_200": {
        "requirement_text": "If the emergency 9-1-1 call being followed-up was received with both a SIP and a TEL callback URI, the SIP URI MUST ALWAYS be used first (if the follow-up call attempt fails, then the TEL URI is used).",
        "document_section": "2.3.7.2.7",
        "description": "If the emergency 9-1-1 call being followed up had both a SIP and TEL callback URI, the SIP URI must always be used first.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_201": {
        "requirement_text": "To perform a Follow-Up call, the CHFE MUST: ● Craft and send to the OCIF an INVITE request with the following: \n o Request URI specifying the callback number o From header in one of the two following forms: \n ▪ If privacy is not necessary, the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for callback purposes (this is necessary in order for the NGCS to properly assert the identity of the PSAP) \n ▪ If privacy is necessary, From header MUST specify URI sip:anonymous@anonymous.invalid \n o Privacy header with one of the two following values: \n ▪ If privacy is not necessary: \n ● If facilities used for the call are not provisioned with privacy by default, the CHFE SHOULD include a Privacy header with value “none” \n ● If the facilites are provisioned with privacy by default, the CHFE \n MUST include a Privacy header with value “none” \n ▪ If privacy is necessary, the CHFE MUST include a Privacy header with the value “id” \n o A first P-Asserted-Identity header in the form “sip:TN@<Agency-\n Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for \n callback purposes (this is necessary in order for the NGCS to properly assert the identity of the PSAP) \n o A second P-Asserted-Identity specifying the identity of the agent originating the callback, in the form “sip: “Agent name” <Agent Identifier>” (display name optional) \n o An Identity header that contains a PASSporT (RFC 8225 [xxx]) consisting of the calling TN signed using a certificate traceable to the PCA associated with the agent or agency identified in the second P-Asserted-Identity header (see above). Specifically: \n o the PASSporT header information consisting of: \n ● “typ” = “passport” \n ● \"alg\" = \"ES256\", \n ● \"x5u\" = the URI associated with a certificate traceable to the PCA associated with the agent or agency identified in the second P-\n Asserted-Identity header o PASSporT payload information consisting of: \n ● “dest” claim = callback TN from the To header/Request URI line \n ● “iat” (Issued At) claim = the date and time of issuance of the token/origination of the call \n ● “orig” claim = PSAP calling TN from P-Asserted-Identity header (see \n #7 above) \n o Resource-Priority header value of “esnet.0” as specified in STA-010 o Route header value set to the OCIF’s URI and “lr” parameter o Call-Info header specifying the same Incident Tracking Identifiers as the emergency 9-1-1 call being followed up \n o Call-Info header specifying a new Call Identifier o An SDP Offer which includes all supported media choices, subject to operational considerations, which includes the media and codecs negotiated for the emergency 9-1-1 call as preferred (top-most of the Offer) \n ● Log a CallStartLogEvent where standardPrimaryCallType is set to “followUp”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a SessionStartLogEvent where standardPrimaryCallType is set to “followUp”. \n The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallStateChangeLogEvent with state set to callBegin \n ● Log a SessionStateChangeLogEvent with state set to callBegin \n ● Notify authorized EIDO Subscribers of the origination of the Follow-Up call",
        "document_section": "2.3.7.2.7",
        "description": "To perform a Follow-Up call, the CHFE must send an INVITE request with appropriate headers, including privacy settings, identity headers, and a PASSporT. The CHFE must log events for the Follow-Up call and notify EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_202": {
        "requirement_text": "The user expects the 9-1-1 call to be processed as normal, and the CHFE MUST ensure that the 9-1-1 call conforms to existing regulations for such calls.",
        "document_section": "2.3.7.2.8",
        "description": "The CHFE must ensure that the 9-1-1 call is processed as normal and in compliance with existing regulations.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_203": {
        "requirement_text": "If the CHFE implements the ability to place the call through the NGCS, the CHFE MUST follow the specifications in STA-010 for such calls.",
        "document_section": "2.3.7.2.8",
        "description": "If the CHFE is able to place calls through the NGCS, it must follow the specifications in STA-010 for such calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_204": {
        "requirement_text": "The CHFE MUST be able to originate such calls to destinations served by the ESInet.",
        "document_section": "2.3.7.2.9",
        "description": "The CHFE must be able to originate calls to destinations served by the ESInet.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_205": {
        "requirement_text": "To do so the CHFE MUST: ● Send an INVITE to the OCIF with the following: \n o Request URI specifying a service URN in the appropriate responder tree, for example, “urn:emergency:service:responder.police” \n o A From header specifying the identity of the agent originating the call, in the form “sip: “Agent name” <Agent Identifier>” (display name optional) \n o Two P-Asserted-Identity headers, order is an implementation detail: \n ▪ A P-Asserted-Identity header specifying the identity of the Agent originating the call, in the form “sip: “Agent name” <Agent Identifier>” (display name optional) \n ▪ A P-Asserted-Identity header specifying the identity of the Agency originating the call, in the form “sip: “Agency name” <Agency \n Identifier>” (display name optional) \n o An Identity header that contains a PASSporT (RFC 8225 [xxx]) consisting of the first P-Asserted-Identity header signed using a certificate traceable to the PCA associated with the agent or agency identified in that header. \n Specifically: \n o the PASSporT header information consisting of: \n ● “typ” = “passport” \n ● \"alg\" = \"ES256\", \n ● \"x5u\" = the URI associated with a certificate traceable to the PCA associated with the agent or agency identified in the second P-\n Asserted-Identity header o PASSporT payload information consisting of: \n ● “dest” claim = SIP URI found in the To header \n ● “iat” (Issued At) claim = the date and time of issuance of the token/origination of the call \n ▪ “orig” claim = SIP URI from the first P-Asserted-Identity header o An appropriate Resource-Priority header value in the “esnet” namespace specified in STA-010 \n o A first Route header value set to the OCIF’s URI and “lr” parameter o A second Route header value set to the target’s URI and “lr” parameter o Call-Info header specifying the Incident Tracking Identifier o Call-Info header specifying the new Call Identifier o A Call-Info header with purpose “emergency-eido” designating either an EIDO by reference using a HTTPS URI or an EIDO by value found in the body of the INVITE \n ● Log a CallStartLogEvent where standardPrimaryCallType is set to \n “emergencySupport”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a SessionStartLogEvent where standardPrimaryCallType is set to \n “emergencySupport”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallStateChangeLogEvent with state set to callBegin \n ● Log a SessionStateChangeLogEvent with state set to callBegin \n ● Notify authorized EIDO Subscribers of the origination of the Emergency Support call",
        "document_section": "2.3.7.2.9",
        "description": "To originate such calls, the CHFE must send an INVITE request with appropriate headers, including those for identity and PASSporT.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_206": {
        "requirement_text": "The CHFE MUST be able to originate non-emergency calls to any destination via the OCIF where PSAP and NGCS policy allows.",
        "document_section": "2.3.7.2.10",
        "description": "The CHFE must be able to originate non-emergency calls to any destination via the OCIF when PSAP and NGCS policy allows.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_207": {
        "requirement_text": "To do so the CHFE MUST: Craft and send an INVITE request with the following: \n o Request URI specifying the destination URI o Two P-Asserted-Identity headers, order is an implementation detail: \n ▪ A P-Asserted-Identity specifying the identity of the agent originating the callback, in the form “sip: “Agent name” <Agent Identifier>” \n (display name optional) \n ▪ If the target of the call is on the PSTN: \n ● A P-Asserted-Identity header in the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for outbound call purposes (this is necessary in order for the NGCS to properly assert the identity of the PSAP) ▪ Else: \n ● A P-Asserted-Identity header specifying the identity of the \n Agency originating the call, in the form “sip: “Agency name” \n <Agency Identifier>” (display name optional) \n o If one of the P-Asserted-Identity headers contains a URI in the form “sip:TN@<Agency-Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for callback purposes: \n ▪ The From header MUST be specified in one of the following two forms: \n ● If privacy is not necessary, the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for callback purposes (this is necessary in order for the NGCS to properly assert the identity of the PSAP) \n ● If privacy is necessary, From header MUST specify URI \n “sip:anonymous@anonymous.invalid” ▪ Privacy header with one of the two following values: \n ● If privacy is not necessary: \n o If facilities used for the call are not provisioned with privacy by default, the CHFE SHOULD include a Privacy header with value “none” \n o If facilities used for the call are provisioned with privacy by default the CHFE MUST include a Privacy header with value “none” \n ● If privacy is necessary, the CHFE MUST include a Privacy header with value “id” \n o If none of the P-Asserted-Identity headers contains a URI in the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying one of the PSAP’s URIs provisioned for callback purposes, then the From header can be either of the URIs specified in the P-Asserted-Identity headers \n o An Identity header that contains a PASSporT (RFC 8225 [xxx]) consisting of the From header signed using a certificate traceable to the PCA associated with the agent or agency identified in that header. Specifically: \n o the PASSporT header information consisting of: \n ● “typ” = “passport” \n ● \"alg\" = \"ES256\", \n ● \"x5u\" = the URI associated with a certificate traceable to the PCA associated with the agent or agency identified in the second P-\n Asserted-Identity header o PASSporT payload information consisting of: \n ● “dest” claim = SIP URI found in the To header \n ● “iat” (Issued At) claim = the date and time of issuance of the token/origination of the call \n ▪ “orig” claim = SIP URI from the From header o a Route header with the OCIF’s URI and “lr” parameter o a Call-Info header specifying the new Call Identifier \n ● Log a CallStartLogEvent where standardPrimaryCallType is set to “nonEmergency”. \n The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a SessionStartLogEvent where standardPrimaryCallType is set to \n “nonEmergency”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallStateChangeLogEvent with state set to callBegin \n ● Log a SessionStateChangeLogEvent with state set to callBegin",
        "document_section": "2.3.7.2.10",
        "description": "To do so, the CHFE must craft and send an INVITE request with the required headers and a PASSporT. It must also log relevant call and session events.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_208": {
        "requirement_text": "The CHFE MUST be able to originate non-emergency calls to destinations using the External Switching Systems interface.",
        "document_section": "2.3.7.2.11",
        "description": "The CHFE must be able to originate non-emergency calls to destinations using the External Switching Systems interface.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_209": {
        "requirement_text": "To do so the CHFE MUST: Craft and send an INVITE request with the following: \n o Request URI specifying the destination URI o From header in one of the two following forms: \n ▪ If privacy is not required, the form “sip:<telephone number>@<Agency-Identifier>;user=phone” specifying the PSAP URI appropriate for the facilities being used \n ▪ If privacy is required, From header MUST specify URI \n “sip:anonymous@anonymous.invalid” \n o Privacy header with one of the two following values: \n ▪ If privacy is not required: \n ● If facilities used for the call is not provisioned with privacy by default, the CHFE SHOULD include a Privacy header with value “none” \n ● Else the CHFE MUST include a Privacy header with value “none” \n ▪ Else the CHFE MUST include a Privacy header with value “id” o A P-Asserted-Identity header in the form “sip: :<telephone number>@<Agency-Identifier>;user=phone” specifying the PSAP URI appropriate for the facilities being used \n o a Call-Info header specifying a new Call Identifier per STA-010 [XXX]. \n ● Log a CallStartLogEvent where standardPrimaryCallType is set to “nonEmergency”. \n The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a SessionStartLogEvent where standardPrimaryCallType is set to \n “nonEmergency”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a CallStateChangeLogEvent with state set to callBegin \n ● Log a SessionStateChangeLogEvent with state set to callBegin",
        "document_section": "2.3.7.2.11",
        "description": "To do so, the CHFE must send an INVITE request with appropriate headers, including those for privacy, identity, and a new Call Identifier. The CHFE must log call and session events.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_210": {
        "requirement_text": "The CHFE MUST be able to originate internal calls to entities within the Agency such as another Agent.",
        "document_section": "2.3.7.2.12",
        "description": "The CHFE must be able to originate internal calls to entities within the Agency, such as other agents.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_211": {
        "requirement_text": "How this call is signaled internally is not defined in this document, but the CHFE MUST do the following: ● Log a CallStartLogEvent where standardPrimaryCallType is set to “internal”. The standardPrimaryCallType, “to”, and “from” elements MUST be populated. \n ● Log a SessionStartLogEvent where standardPrimaryCallType is set to “internal” \n ● Log a CallStateChangeLogEvent with state set to callBegin \n ● Log a SessionStateChangeLogEvent with state set to callBegin",
        "document_section": "2.3.7.2.12",
        "description": "The CHFE must log relevant call and session events for internal calls.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_212": {
        "requirement_text": "If an outgoing call request needs to be cancelled, the CHFE MUST: Send an in-dialog CANCEL request \n ● Log a CallStateChangeLogEvent with state set to callCancel \n ● Log a SessionStateChangeLogEvent with state set to callCancel \n ● Log a CallEndLogEvent \n ● Log a SessionEndLogEvent \n ● Notify all authorized EIDO Subscribers of the cancelling of the call",
        "document_section": "2.3.7.2.13",
        "description": "If an outgoing call request needs to be canceled, the CHFE must send an in-dialog CANCEL request, log cancellation events, and notify authorized EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_213": {
        "requirement_text": "When an outgoing call is answered, the CHFE MUST: ● Log a CallStateChangeLogEvent with the state set to callAnswered \n ● Log a SessionStateChangeLogEvent with the state set to callAnswered \n ● Notify authorized EIDO Subscribers of the answering of Follow-Up call",
        "document_section": "2.3.7.2.14",
        "description": "When an outgoing call is answered, the CHFE must log call and session events, including \"callAnswered\" states, and notify EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_214": {
        "requirement_text": "When the call is released, the CHFE MUST do the following: ● Log a CallEndLogEvent \n ● Log a SessionEndLogEvent \n ● Log a CallStateChangeLogEvent with state set to callEnd \n ● Log a SessionStateChangeLogEvent with state set to callEnd \n ● Log a MediaEndLogEvent for each medium in use at call end time \n ● Notify authorized EIDO Subscribers of the release of the emergency call",
        "document_section": "2.3.7.2.15",
        "description": "When the call is released, the CHFE must log end events, including \"callEnd,\" and notify authorized EIDO Subscribers of the release.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_215": {
        "requirement_text": "At any time during the CHFE’s processing of a call, an Agent MUST be able to change the call’s Priority Identifier, that is, the nature of the event reported by the caller is such that the Call Priority Identifier assigned when the call was received is no longer applicable (for example, a 9-1-1 caller reporting a non-emergency Incident).",
        "document_section": "2.3.7.2.16.1",
        "description": "The CHFE must allow an Agent to change the call’s Priority Identifier if the nature of the event reported by the caller changes.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_216": {
        "requirement_text": "When the Agent performs such action, the CHFE MUST: ● Assign to the call an updated Call PriorityIdentifier \n ● Notify authorized EIDO Subscribers of that new Call Priority Identifier.",
        "document_section": "2.3.7.2.16.1",
        "description": "When an Agent changes the Priority Identifier, the CHFE must assign an updated identifier and notify authorized EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_217": {
        "requirement_text": "If a party is to be added to a call (for example in the case of a transfer of an emergency call), the CHFE MUST be able to refer the call to a Bridge.",
        "document_section": "2.3.7.2.16.2",
        "description": "If a party is to be added to a call (e.g., in the case of a transfer), the CHFE must be able to refer the call to a Bridge.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_218": {
        "requirement_text": "The CHFE MUST support the conferencing of all media types, including RTT as specified in RFC 9170 [xxx] and instant messages as specified in section Conference Bridging for MSRP text in NENA-STA-010 [xxx].",
        "document_section": "2.3.7.2.16.2",
        "description": "The CHFE must support the conferencing of all media types, including RTT and instant messaging, as specified in relevant RFCs and NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_219": {
        "requirement_text": "The CHFE MUST support an NGCS-hosted Bridge and MAY implement a local Bridge.",
        "document_section": "2.3.7.2.16.2",
        "description": "The CHFE must support an NGCS-hosted Bridge and may implement a local Bridge.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_220": {
        "requirement_text": "If the CHFE implements a local Bridge, it MUST conform to the Bridging and Transfers section of NENA-STA-010 [xxx].",
        "document_section": "2.3.7.2.16.2",
        "description": "If the CHFE implements a local Bridge, it must conform to the Bridging and Transfers section of NENA-STA-010.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_221": {
        "requirement_text": "To add a party to the call, the CHFE MUST: ● If the call does not have an isfocus parameter, INVITE a Bridge and move the call to the Bridge (if the isfocus parameter is present, the call is already on a Bridge) ● Send an in-dialog REFER to the Bridge with the following: \n o Call-Info headers specifying the Call Identifier and Incident Tracking Identifier o A Referred-By header specifying the URI of the referring PSAP o A Refer-To header with the following elements: \n ▪ The SIP or TEL URI of the party to be added \n ▪ If the party to be added is the 9-1-1 caller (because the caller released the call prematurely) then the URI MUST specify that the outbound call from the Bridge will be a Callback and thus the URI MUST include an escaped SIP Priority header with value “psap-callback” per RFC 7090 [xxx], for example (unescaped): \n  \n Refer-To: sip:8195551212@osp.com?Priority=psap-callback \n  \n ▪ If the party being added to an emergency call is an Agency: \n a) An escaped Call-Info header containing the HTTPS URI of the \n EIDO containing the details of the call, with a purpose of \n “emergency-eido” per STA-010 [xxx] \n b) If applicable, a suitable Service URN (such as the Service URN used to query the ECRF to determine the party being added) as a “serviceurn” parameter to the Refer-To header field ▪ For example (unescaped): \n  \n Refer-To: <sip:Poison-Control@cnty.st.us?Call-Info=https://NG911PSAP-A.911AuthorityA.net/eido09245673;purpose=emergency-eido>; \n serviceurn=urn:emergency:service:responder.fire \n  \n ● Log a CallStateChangeLogEvent with state set to partyAdd \n ● Log a SessionStateChangeLogEvent with state set to partyAdd \n ● If the added party is an Agency, log an AdditionalAgencyLogEvent \n ● When the added party answers the call, send an EIDO to authorized EIDO Subscribers of the addition of the party to the call",
        "document_section": "2.3.7.2.16.2",
        "description": "The CHFE must add a party to a call by inviting a Bridge if needed, sending a REFER with necessary headers, and logging events, including notifying authorized subscribers when the party answers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_222": {
        "requirement_text": "Upon answering a call originating from a Bridge (that is, where the Contact header of the incoming call has a parameter of “isfocus”), the CHFE MUST subscribe to the Bridge specifying the “conference” event package per RFC 4575 [xxx].",
        "document_section": "2.3.7.2.16.2.1",
        "description": "Upon answering a call from a Bridge, the CHFE must subscribe to the Bridge using the \"conference\" event package as outlined in RFC 4575.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_223": {
        "requirement_text": "The CHFE MUST implement out of dialog subscriptions per the RFC 7647 section “Dialog re-use is prohibited\".",
        "document_section": "2.3.7.2.16.2.1",
        "description": "The CHFE must implement out-of-dialog subscriptions in compliance with RFC 7647 to avoid dialog reuse.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_224": {
        "requirement_text": "All EIDOs sent as the result of being invited to a bridged call MUST specify all of the parties on the call.",
        "document_section": "2.3.7.2.16.2.1",
        "description": "All EIDOs resulting from being invited to a bridged call must include the details of all parties on the call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_225": {
        "requirement_text": "To remove a party from the call, or cancel a pending request to add a party who has not yet answered, the CHFE MUST: ● Send an in-dialog REFER to the Bridge with a Refer-To header specifying the SIP or TEL URI of the party to be removed (as discovered from the participant notifications received from the Bridge) with the parameter Method equal to BYE. For example: \n  \n Refer-To: sip:Poison-Control@cnty.st.us?Method=BYE \n  \n  \n ● Log a CallStateChangeLogEvent with state set to partyRemove \n ● Log a SessionStateChangeLogEvent with state set to partyRemove \n ● When the Bridge confirms the removal of the party from the call, notify authorized EIDO Subscribers of the removal",
        "document_section": "2.3.7.2.16.2.2",
        "description": "To remove a party from the call or cancel a pending request, the CHFE must send a REFER with the BYE method to the Bridge, log events, and notify authorized EIDO Subscribers once the removal is confirmed.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_226": {
        "requirement_text": "The CHFE MUST implement support for Attended Transfers as specified in the Attended Transfers section of NENA-STA-010 by doing the following: ● Add a party to the call as specified in the Add a Party to a Call section \n ● When requested by the Agent at the transferring PSAP, its CHFE MUST release the call from the Bridge by following the process specified in section Releasing a Call and in addition MUST log a CallTransferLogEvent when it disconnects from the \n Bridge \n ● If the NGCS Bridge method is Ad Hoc, the transfer-to CHFE MUST release the Bridge as specified in the SIP Ad Hoc Flow section of STA-010 if it is alone on the Bridge along with the 9-1-1 caller",
        "document_section": "2.3.7.2.16.3.1",
        "description": "The CHFE must support Attended Transfers by adding a party to the call, releasing the call from the Bridge as requested by the Agent, and logging the transfer when disconnecting from the Bridge.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_227": {
        "requirement_text": "The transferring CHFE MUST be able to process a request by an Agent to release the call after the REFER has been sent but prior to receiving a call answered notification.",
        "document_section": "2.3.7.2.16.3.1",
        "description": "The transferring CHFE must handle a request to release the call after sending the REFER but before receiving a call answered notification.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_228": {
        "requirement_text": "In such a case the transferring CHFE MUST NOT log a CallTransferLogEvent because the outcome of the transfer is unknown.",
        "document_section": "2.3.7.2.16.3.1",
        "description": "In this case, the transferring CHFE must not log a CallTransferLogEvent due to the unknown outcome of the transfer.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_229": {
        "requirement_text": "If the bridging method is Ad Hoc, the CHFE MUST NOT create a conference prior to performing the Blind Transfer.",
        "document_section": "2.3.7.2.16.3.2",
        "description": "If the bridging method is Ad Hoc, the CHFE must not create a conference before performing the Blind Transfer.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_230": {
        "requirement_text": "To perform a Blind Transfer: ● The transferring CHFE MUST send an in-dialog REFER with the following: \n o Request-URI which contains the URI of the Contact header from dialogforming INVITE \n o Call-Info headers specifying the Call Identifier and the Incident Tracking \n Identifier o A Referred-By header specifying the URI of the referring PSAP o A Refer-To header with the following elements: ▪ The SIP or TEL URI of the transfer-to party ▪ If the transfer-to party is a PSAP: \n a) An escaped Call-Info header containing the HTTPS URI of the \n EIDO containing the details of the call, with a purpose of \n “emergency-eido” per STA-010 [xxx] \n b) A suitable Service URN (such as the Service URN used to query the ECRF to determine the party being added) as a “serviceurn” parameter to the Refer-To header field \n For example (unescaped): \n  \n  \n Refer-To: <sip:Poison-Control@cnty.st.us?Call-Info= https://NG911PSAPA.911Authority-A.net/eido09245673;purpose=emergency-eido>; serviceurn=urn:emergency:service:responder.fire \n  \n ● If the transfer-to party is an Agency, the transferring CHFE MUST log an AdditionalAgencyLogEvent \n ● If the transfer-to party is a PSAP, that PSAP’s CHFE MUST process the incoming call as specified in the incoming call above \n ● When the transferring CHFE receives a NOTIFY specifying the transfer-to party has answered the call it MUST release the call by following the process specified in the section Releasing a Call above and then MUST log a CallTransferLogEvent.",
        "document_section": "2.3.7.2.16.3.2",
        "description": "To perform a Blind Transfer, the transferring CHFE sends a REFER with the required headers and URI parameters, logs necessary events, and releases the call once the transfer is answered.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_231": {
        "requirement_text": "The transferring CHFE MUST be able to process a request by an Agent to release the call after the REFER has been sent but prior to receiving a call answered notification.",
        "document_section": "2.3.7.2.16.3.2",
        "description": "The transferring CHFE must process a release request from an Agent after the REFER has been sent but before receiving a call answered notification.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_232": {
        "requirement_text": "In such a case the transferring CHFE MUST NOT log a CallTransferLogEvent because the outcome of the transfer is unknown.",
        "document_section": "2.3.7.2.16.3.2",
        "description": "If a transfer is released before a call answered notification is received, the CHFE must not log a CallTransferLogEvent due to the uncertain transfer outcome.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_233": {
        "requirement_text": "The CHFE MUST be able to transfer a call originating from an External Switching System to a target on the ESInet (another PSAP for example).",
        "document_section": "2.3.7.2.16.3.2",
        "description": "The CHFE must support transferring calls from an External Switching System to a target on the ESInet, such as another PSAP.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_234": {
        "requirement_text": "To do so the CHFE MUST: Send an INVITE to the Conference Factory of the NGCS Bridge to request a conference session \n o Upon successful conference session creation, move the call to the bridge so the two call legs are bridged (the leg to the External Switching System and the leg to the Agent) \n ▪ For each call leg: \n ● Send an INVITE to the Bridge targeting the conference session with the following: \n o For a call where the Call Priority Identifier is High or Highest: \n ▪ the Request URI must be “urn:service:sos” and Route header with the SIP URI of the conference session \n o A Call-Info with the Incident Tracking Identifier o A Call-Info header with the Call Identifier \n o From this point follow the process specified in section Attended Transfer",
        "document_section": "2.3.7.2.16.3.3",
        "description": "To establish a conference call, the CHFE sends an INVITE to the Conference Factory of the NGCS Bridge, creates the conference session, and bridges the call legs, following the Attended Transfer process.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_235": {
        "requirement_text": "Because the External Switching System does not have a direct interface to the Bridge, the CHFE MUST remain in the call path for the call leg going to the External Switching System.",
        "document_section": "2.3.7.2.16.3.3",
        "description": "Since the External Switching System cannot directly interface with the Bridge, the CHFE must remain in the call path for the call leg going to the External Switching System.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_236": {
        "requirement_text": "The CHFE MUST be able to tear down a transferred call that has effectively ended without any party sending a BYE.",
        "document_section": "2.3.7.2.16.3.3",
        "description": "The CHFE must be able to terminate a transferred call without any party sending a BYE if the call has effectively ended.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_237": {
        "requirement_text": "The CHFE MUST implement support for putting an active call in a state to allow the Agent to accomplish other tasks, including answering another call.",
        "document_section": "2.3.7.2.16.4",
        "description": "The CHFE must support putting an active call into a state that allows the Agent to perform other tasks, including answering another call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_238": {
        "requirement_text": "The Agent, or another Agent (depending on the type of suspension), can then retrieve the call and resume conversation with the caller. The CHFE MUST: ● Implement support for an exclusive Hold (only the Agent who put the call on hold can return back to the call) o CHFE MUST log a CallStateChangeLogEvent with state set to callHold o Notify authorized EIDO Subscribers of the holding of the call \n ● Implement support for a non-exclusive Park (any authorized Agent can retrieve the call) \n o CHFE MUST log a CallStateChangeLogEvent with state set to callPark o Notify authorized EIDO Subscribers of the parking of the call ● When a Held or Parked call is retrieved: \n o CHFE MUST log a CallStateChangeLogEvent with state set to callRetrieve o Notify authorized EIDO Subscribers of the retrieval of the call \n ● Maintain the SDP “sendrcv” attribute state while the call is on Hold or Parked \n ● Implement support to inform the caller that the call has been suspended using all media in use for the call (such as specified in Session Initiation Protocol Service Example -- Music on Hold (RFC 7088))",
        "document_section": "2.3.7.2.16.4",
        "description": "The CHFE must support exclusive Hold (only the Agent who placed the call on hold can retrieve it) and non-exclusive Park (any authorized Agent can retrieve the call), logging the appropriate events and notifying authorized EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_239": {
        "requirement_text": "The CHFE MUST permit authorized Agents to silently monitor the calls of another Agent as permitted by policy.",
        "document_section": "2.3.7.2.16.5.1",
        "description": "The CHFE must allow authorized Agents to silently monitor the calls of another Agent as per policy.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_240": {
        "requirement_text": "When an authorized Agent initiates Silent Monitoring, the CHFE MUST log a SilentMonitoringStartLogEvent.",
        "document_section": "2.3.7.2.16.5.1",
        "description": "When an authorized Agent starts Silent Monitoring, the CHFE must log a SilentMonitoringStartLogEvent.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_241": {
        "requirement_text": "If the monitored Agent is on a call or when the monitored Agent answers or places a call that is monitored, the CHFE MUST log the following: ● A SilentlyMonitoredCallStartLogEvent \n ● A SilentMonitorMediaStartLogEvent for each medium being monitored. \n  \n ● As media are added and/or removed from a silently monitored call, the CHFE MUST log appropriate SilentMonitorMediaStartLogEvent and/or SilentMonitorMediaStopLogEvent.",
        "document_section": "2.3.7.2.16.5.1",
        "description": "If the monitored Agent is on a call or answers/places a monitored call, the CHFE must log events for the start of the monitored call and media monitoring.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_242": {
        "requirement_text": "When the monitored Agent releases a call, the CHFE MUST log the following: A SilentMonitorMediaStopLogEvent for each medium being monitored ● A SilentlyMonitoredCallStopLogEvent. \n ● When an authorized Agent stops Silent Monitoring, the CHFE MUST log a SilentMonitoringStopLogEvent.",
        "document_section": "2.3.7.2.16.5.1",
        "description": "When the monitored Agent ends a call, the CHFE must log the end of the monitoring events and log when an authorized Agent stops Silent Monitoring.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_243": {
        "requirement_text": "The CHFE MUST permit an authorized Agent to intervene on an active call as permitted by policy.",
        "document_section": "2.3.7.2.16.5.2",
        "description": "The CHFE must allow authorized Agents to intervene on an active call as permitted by policy.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_244": {
        "requirement_text": "If the call to be intervened is not on a Bridge, to do so the CHFE MUST: Send an INVITE to the Conference Factory of the Bridge to request a conference session \n o Upon successful conference session creation move the call to be intervened to the bridge so the two call legs are bridged (the leg to the other party and the leg to the Agent) \n ▪ For each Agent (Agent on the call and intervening Agent): \n ● Send an INVITE to the Bridge targeting the conference session with the following: \n o For a call where the Call Priority Identifier is High or \n Highest, the Request URI must be “urn:service:sos” and \n Route header with the SIP URI of the conference session o Place the URI of the Agent in From: \n o A Call-Info header with the Incident Tracking Identifier per NENA STA-010 \n o A Call-Info header with the Call Identifier per NENA STA010 \n ▪ If the other party of the intervened call is on the ESInet: \n ● Send a REFER with Replaces to the party where the Refer-To header specifies the conference session \n ▪ If the other party of the intervened call is on the External Switching System interface: \n ● For the call leg to the party on the ESS, send an INVITE to the Bridge targeting the conference session with the following: \n o For a call where the Call Priority Identifier is High or \n Highest, the Request URI must be “urn:service:sos” and \n Route header with the SIP URI of the conference session o A Call-Info header with the Incident Tracking Identifier per NENA STA-010 \n o A Call-Info header with the Call Identifier per NENA STA010",
        "document_section": "2.3.7.2.16.5.2",
        "description": "If the call to be intervened is not on a Bridge, the CHFE must create a conference session with the Bridge and move the call to be intervened, following specific header and URI procedures for both call legs.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_245": {
        "requirement_text": "If the call to be intervened is already on a Bridge, the CHFE MUST: ● For the intervening Agent, send an INVITE to the Bridge targeting the conference session with the following: \n o For a call where the Call Priority Identifier is High or Highest, the Request URI must be “urn:service:sos” and Route header with the SIP URI of the conference session \n o A Call-Info header with the Incident Tracking Identifier per NENA STA-010 o A Call-Info header with the Call Identifier per NENA STA-010",
        "document_section": "2.3.7.2.16.5.2",
        "description": "If the call to be intervened is already on a Bridge, the CHFE must send an INVITE to the Bridge for the intervening Agent to join the conference session with the appropriate headers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_246": {
        "requirement_text": "Once the intervening Agent has been conferenced in, the CHFE MUST: ● Log a CallStateChangeLogEvent with state set to callBargeIn \n ● Log a SessionStateChangeLogEvent with state set to callBargeIn \n ● Send an EIDO to authorized EIDO Subscribers of the addition of the party to the call",
        "document_section": "2.3.7.2.16.5.2",
        "description": "Once the intervening Agent is conferenced in, the CHFE must log a CallStateChangeLogEvent and a SessionStateChangeLogEvent with the state set to \"callBargeIn\" and notify authorized EIDO Subscribers.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_247": {
        "requirement_text": "Once the intervening Agent has been conferenced in, the CHFE MUST process the call no differently than any other conference call.",
        "document_section": "2.3.7.2.16.5.2",
        "description": "Once the intervening Agent is conferenced in, the CHFE must process the call as any other conference call.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_248": {
        "requirement_text": "The CHFE MUST implement support to log media as specified in STA-010 [XXX]. If the CHFE is acting as the Session Recording Client (SRC) it must log media in the following manner: ● All calls with Call Priority Identifier ofHigh or Highest MUST be recorded \n ● Queue recording: the CHFE MUST support the logging of the media of all calls received on any designated Queue based on local capture policy. For example, a non-emergency queue may be designated as “not recorded”. This includes all early media and media exchanged when a call is parked/put on hold \n ● Agent recording: the CHFE MUST support the logging of the media of all calls received or placed by a particular Agent, that is media received from the Agent's microphone and media sent to the Agent's earpiece, or text or video sent or received. \n ● Immediately once a call is placed or received on a monitored interface and media is negotiated, to establish a SIPREC session the CHFE MUST: \n o Send one or more SIPREC INVITE requests to the Logging Service with any desired metadata \n o Once a SIPREC session is accepted, do the following: \n ▪ Log a RecCallStartLogEvent \n ▪ Once media starts flowing on the recordedcall (regardless of whether it is early media or not), the CHFE MUST: \n ▪ Log a RecMediaStartLogEvent \n ▪ Send a copy of every exchanged RTP packet to the Logging Service \n ● When parties are added or removed, or media is renegotiated, the CHFE can send any desired SIPREC metadata updates to the Logging Service \n ● When the recorded call is released with no remainining parties, the CHFE MUST: \n o Send a BYE for every SIPREC session established for that call \n o Log a RecMediaEndLogEvent o Log a RecCallEndLogEvent",
        "document_section": "2.3.7.2.17",
        "description": "The CHFE must log media according to STA-010, including recording high-priority calls, queue recordings, and agent-specific recordings, and must establish a SIPREC session for media logging with appropriate logging events.",
        "test_id": "",
        "subtests": []
    },
    "RQ_CHE_249": {
        "requirement_text": "If a local Bridge is available, it MUST NOT be used in a call that already has a Bridge (indicated by the presence of the “isfocus” parameter), as cascaded bridges provide unacceptable distortion",
        "document_section": "2.3.7.2.17",
        "description": "If a local Bridge is available, it must not be used in a call that already has a Bridge, as cascaded bridges can cause distortion.",
        "test_id": "",
        "subtests": []
    }
}