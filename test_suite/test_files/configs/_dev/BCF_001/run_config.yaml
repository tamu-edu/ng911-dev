run_config:
  global:
    response_timeout: 30
    type: "conformance"
    report_files:
      - type: "xml"
        path: "CTR.xml"
      - type: "docx"
        path: "CTR.docx"
      - type: "pdf"
        path: "CTR.pdf"
      - type: "csv"
        path: "CTR.csv"
      - type: "json"
        path: "CTR.json"
    log:
      level: "DEBUG"
      output_file: "test_files/logs/logger.log"
  tests:
    - name: "Test of BCF element"
      requirements:
        - name: "RQ_BCF_001"
          variations: ["BCF pass", "BCF fail"]
        - name: "RQ_BCF_002"
          variations: ["BCF pass", "BCF fail"]
        - name: "RQ_BCF_003"
          variations: ["BCF pass", "BCF fail"]
        - name: "RQ_BCF_005"
          variations: ["BCF pass", "BCF fail"]
        - name: "RQ_BCF_007"
          variations: ["BCF pass", "BCF fail"]
        - name: "RQ_BCF_009"
          variations: ["BCF pass", "BCF fail"]
        - name: "RQ_BCF_010"
          variations: ["BCF pass", "BCF fail"]
      variations:
        - name: "BCF pass"
          mode: "pcap" # pcap / online
          pcap_file: "pcaps/BCF_001/artem.success.pcap" # optiona
          params:
            messages:
              - action: "send"
                prep_steps: [
                  {
                    method_name: "function_name",
                    kwargs: {
                      name1: "NAME_OF_THE_VAR_1"
                    },
                    save_result_as: [
                      "NAME_OF_THE_VAR_2",
                      "NAME_OF_THE_VAR_3"
                    ]
                  },
                ]
                type: "SIP"
                method: "INVITE"
                response_code: ""
                http_url: ""
                body: ""
                sipp_scenario: {
                  scenario_file_path: "SIP_INVITE_RECEIVE.xml",
                  kwargs: {
                    name2: "NAME_OF_THE_VAR_2",
                    name3: "NAME_OF_THE_VAR_3"
                  },
                  save_response_as: "NAME_OF_THE_VAR_4",
                  save_log_as: "log_file.log"
                }
                run_in_background: "True"
          filtering_options: # optional
            - message_type: "stimulus" # stimulus/output/other
              src_interface: "IF_OSP_O-BCF-1"
              dst_interface: "IF_O-BCF-1_OSP"
              sip_method: "MESSAGE" #  leave empty if not needed
              http_request_method: "" #  leave empty if not needed
              response_status_code: "" #  leave empty if not needed
              header_contains: "To: urn:service:911"
              body_contains: ""
            - message_type: "output" # stimulus/output/other
              src_interface: "IF_O-BCF-1_ESRP_1"
              dst_interface: "IF_ESRP-1_O-BCF-1"
              sip_method: "MESSAGE" #  leave empty if not needed
              http_request_method: "" #  leave empty if not needed
              response_status_code: "" #  leave empty if not needed
              header_contains: "To: urn:service:911"
              body_contains: ""
        - name: "BCF fail"
          mode: "pcap" # pcap / online
          pcap_file: "pcaps/BCF_001/artem.fail-resource-priority.pcap" # optiona
          params:
            messages:
              - action: "send"
                prep_steps: [
                  {
                    method_name: "function_name",
                    kwargs: {
                      name1: "NAME_OF_THE_VAR_1"
                    },
                    save_result_as: [
                      "NAME_OF_THE_VAR_2",
                      "NAME_OF_THE_VAR_3"
                    ]
                  },
                ]
                type: "SIP"
                method: "INVITE"
                response_code: ""
                http_url: ""
                body: ""
                sipp_scenario: {
                  scenario_file_path: "SIP_INVITE_RECEIVE.xml",
                  kwargs: {
                    name2: "NAME_OF_THE_VAR_2",
                    name3: "NAME_OF_THE_VAR_3"
                  },
                  save_response_as: "NAME_OF_THE_VAR_4",
                  save_log_as: "log_file.log"
                }
                run_in_background: "True"
          filtering_options: # optional
            - message_type: "stimulus" # stimulus/output/other
              src_interface: "IF_OSP_O-BCF-1"
              dst_interface: "IF_O-BCF-1_OSP"
              sip_method: "MESSAGE" #  leave empty if not needed
              http_request_method: "" #  leave empty if not needed
              response_status_code: "" #  leave empty if not needed
              header_contains: "To: urn:service:911"
              body_contains: ""
            - message_type: "output" # stimulus/output/other
              src_interface: "IF_O-BCF-1_ESRP_1"
              dst_interface: "IF_ESRP-1_O-BCF-1"
              sip_method: "MESSAGE" #  leave empty if not needed
              http_request_method: "" #  leave empty if not needed
              response_status_code: "" #  leave empty if not needed
              header_contains: "To: urn:service:911"
              body_contains: ""

